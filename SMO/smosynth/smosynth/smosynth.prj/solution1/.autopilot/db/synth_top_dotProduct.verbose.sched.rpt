

================================================================
== Vivado HLS Report for 'synth_top_dotProduct'
================================================================
* Date:           Thu May 21 18:38:30 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        smosynth.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.23|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|  835|    1|  835|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+-----+-----+----------+-----------+-----------+--------+----------+
        |                    |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name     | min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +--------------------+-----+-----+----------+-----------+-----------+--------+----------+
        |- dotProduct_while  |    0|  833|        17|          -|          -| 0 ~ 49 |    no    |
        +--------------------+-----+-----+----------+-----------+-----------+--------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	19  / (or_cond)
	2  / (!or_cond)
2 --> 
	3  / (tmp_18)
	19  / (!tmp_18)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	2  / true
19 --> 
* FSM state operations: 

 <State 1>: 6.38ns
ST_1: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([444 x double]* %x_3_value, [1 x i8]* @str38, [7 x i8]* @str37, [1 x i8]* @str38, i32 -1, [1 x i8]* @str38, [1 x i8]* @str38, [1 x i8]* @str38)

ST_1: empty_76 [1/1] 0.00ns
:1  %empty_76 = call i32 (...)* @_ssdm_op_SpecMemCore([444 x double]* %x_2_value, [1 x i8]* @str36, [7 x i8]* @str35, [1 x i8]* @str36, i32 -1, [1 x i8]* @str36, [1 x i8]* @str36, [1 x i8]* @str36)

ST_1: empty_77 [1/1] 0.00ns
:2  %empty_77 = call i32 (...)* @_ssdm_op_SpecMemCore([481 x double]* %x_1_value, [1 x i8]* @str34, [7 x i8]* @str33, [1 x i8]* @str34, i32 -1, [1 x i8]* @str34, [1 x i8]* @str34, [1 x i8]* @str34)

ST_1: empty_78 [1/1] 0.00ns
:3  %empty_78 = call i32 (...)* @_ssdm_op_SpecMemCore([481 x double]* %x_0_value, [1 x i8]* @str32, [7 x i8]* @str31, [1 x i8]* @str32, i32 -1, [1 x i8]* @str32, [1 x i8]* @str32, [1 x i8]* @str32)

ST_1: empty_79 [1/1] 0.00ns
:4  %empty_79 = call i32 (...)* @_ssdm_op_SpecMemCore([444 x i32]* %x_3_id, [1 x i8]* @str30, [7 x i8]* @str29, [1 x i8]* @str30, i32 -1, [1 x i8]* @str30, [1 x i8]* @str30, [1 x i8]* @str30)

ST_1: empty_80 [1/1] 0.00ns
:5  %empty_80 = call i32 (...)* @_ssdm_op_SpecMemCore([444 x i32]* %x_2_id, [1 x i8]* @str28, [7 x i8]* @str27, [1 x i8]* @str28, i32 -1, [1 x i8]* @str28, [1 x i8]* @str28, [1 x i8]* @str28)

ST_1: empty_81 [1/1] 0.00ns
:6  %empty_81 = call i32 (...)* @_ssdm_op_SpecMemCore([481 x i32]* %x_1_id, [1 x i8]* @str26, [7 x i8]* @str25, [1 x i8]* @str26, i32 -1, [1 x i8]* @str26, [1 x i8]* @str26, [1 x i8]* @str26)

ST_1: empty_82 [1/1] 0.00ns
:7  %empty_82 = call i32 (...)* @_ssdm_op_SpecMemCore([481 x i32]* %x_0_id, [1 x i8]* @str24, [7 x i8]* @str23, [1 x i8]* @str24, i32 -1, [1 x i8]* @str24, [1 x i8]* @str24, [1 x i8]* @str24)

ST_1: empty_83 [1/1] 0.00ns
:8  %empty_83 = call i32 (...)* @_ssdm_op_SpecMemCore([600 x double]* %y_3_value, [1 x i8]* @str22, [7 x i8]* @str21, [1 x i8]* @str22, i32 -1, [1 x i8]* @str22, [1 x i8]* @str22, [1 x i8]* @str22)

ST_1: empty_84 [1/1] 0.00ns
:9  %empty_84 = call i32 (...)* @_ssdm_op_SpecMemCore([600 x double]* %y_2_value, [1 x i8]* @str20, [7 x i8]* @str19, [1 x i8]* @str20, i32 -1, [1 x i8]* @str20, [1 x i8]* @str20, [1 x i8]* @str20)

ST_1: empty_85 [1/1] 0.00ns
:10  %empty_85 = call i32 (...)* @_ssdm_op_SpecMemCore([650 x double]* %y_1_value, [1 x i8]* @str18, [7 x i8]* @str17, [1 x i8]* @str18, i32 -1, [1 x i8]* @str18, [1 x i8]* @str18, [1 x i8]* @str18)

ST_1: empty_86 [1/1] 0.00ns
:11  %empty_86 = call i32 (...)* @_ssdm_op_SpecMemCore([650 x double]* %y_0_value, [1 x i8]* @str16, [7 x i8]* @str15, [1 x i8]* @str16, i32 -1, [1 x i8]* @str16, [1 x i8]* @str16, [1 x i8]* @str16)

ST_1: empty_87 [1/1] 0.00ns
:12  %empty_87 = call i32 (...)* @_ssdm_op_SpecMemCore([600 x i32]* %y_3_id, [1 x i8]* @str14, [7 x i8]* @str13, [1 x i8]* @str14, i32 -1, [1 x i8]* @str14, [1 x i8]* @str14, [1 x i8]* @str14)

ST_1: empty_88 [1/1] 0.00ns
:13  %empty_88 = call i32 (...)* @_ssdm_op_SpecMemCore([600 x i32]* %y_2_id, [1 x i8]* @str12, [7 x i8]* @str11, [1 x i8]* @str12, i32 -1, [1 x i8]* @str12, [1 x i8]* @str12, [1 x i8]* @str12)

ST_1: empty_89 [1/1] 0.00ns
:14  %empty_89 = call i32 (...)* @_ssdm_op_SpecMemCore([650 x i32]* %y_1_id, [1 x i8]* @str10, [7 x i8]* @str9, [1 x i8]* @str10, i32 -1, [1 x i8]* @str10, [1 x i8]* @str10, [1 x i8]* @str10)

ST_1: empty_90 [1/1] 0.00ns
:15  %empty_90 = call i32 (...)* @_ssdm_op_SpecMemCore([650 x i32]* %y_0_id, [1 x i8]* @str8, [7 x i8]* @str7, [1 x i8]* @str8, i32 -1, [1 x i8]* @str8, [1 x i8]* @str8, [1 x i8]* @str8)

ST_1: yindex_read [1/1] 0.00ns
:16  %yindex_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %yindex)

ST_1: xindex_read [1/1] 0.00ns
:17  %xindex_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %xindex)

ST_1: sizeY_read [1/1] 0.00ns
:18  %sizeY_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sizeY)

ST_1: sizeX_read [1/1] 0.00ns
:19  %sizeX_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sizeX)

ST_1: tmp [1/1] 2.52ns
:20  %tmp = icmp eq i32 %sizeX_read, 0

ST_1: tmp_s [1/1] 2.52ns
:21  %tmp_s = icmp eq i32 %sizeY_read, 0

ST_1: or_cond [1/1] 1.37ns
:22  %or_cond = or i1 %tmp, %tmp_s

ST_1: stg_43 [1/1] 1.57ns
:23  br i1 %or_cond, label %.loopexit, label %.preheader.preheader

ST_1: tmp_13_cast1_cast [1/1] 0.00ns
.preheader.preheader:0  %tmp_13_cast1_cast = zext i6 %xindex_read to i13

ST_1: tmp_14 [1/1] 6.38ns
.preheader.preheader:1  %tmp_14 = mul i13 %tmp_13_cast1_cast, 50

ST_1: tmp_14_cast [1/1] 0.00ns
.preheader.preheader:2  %tmp_14_cast = zext i13 %tmp_14 to i33

ST_1: tmp_15_cast2_cast [1/1] 0.00ns
.preheader.preheader:3  %tmp_15_cast2_cast = zext i6 %yindex_read to i13

ST_1: tmp_15 [1/1] 6.38ns
.preheader.preheader:4  %tmp_15 = mul i13 %tmp_15_cast2_cast, 50

ST_1: tmp_16_cast [1/1] 0.00ns
.preheader.preheader:5  %tmp_16_cast = zext i13 %tmp_15 to i33

ST_1: stg_50 [1/1] 1.57ns
.preheader.preheader:6  br label %.preheader


 <State 2>: 5.46ns
ST_2: p1 [1/1] 0.00ns
.preheader:0  %p1 = phi i32 [ %p1_2, %_ifconv ], [ 0, %.preheader.preheader ]

ST_2: p2 [1/1] 0.00ns
.preheader:1  %p2 = phi i32 [ %p2_2, %_ifconv ], [ 0, %.preheader.preheader ]

ST_2: dot [1/1] 0.00ns
.preheader:2  %dot = phi double [ %dot_1, %_ifconv ], [ 0.000000e+00, %.preheader.preheader ]

ST_2: tmp_16 [1/1] 2.52ns
.preheader:3  %tmp_16 = icmp slt i32 %p1, %sizeX_read

ST_2: tmp_17 [1/1] 2.52ns
.preheader:4  %tmp_17 = icmp slt i32 %p2, %sizeY_read

ST_2: tmp_18 [1/1] 1.37ns
.preheader:5  %tmp_18 = and i1 %tmp_16, %tmp_17

ST_2: stg_57 [1/1] 1.57ns
.preheader:6  br i1 %tmp_18, label %_ifconv, label %.loopexit

ST_2: tmp_20_cast_cast [1/1] 0.00ns
_ifconv:3  %tmp_20_cast_cast = sext i32 %p1 to i33

ST_2: sum [1/1] 2.44ns
_ifconv:4  %sum = add i33 %tmp_14_cast, %tmp_20_cast_cast

ST_2: tmp_13 [1/1] 0.00ns
_ifconv:5  %tmp_13 = trunc i33 %sum to i2

ST_2: tmp_12 [1/1] 0.00ns
_ifconv:6  %tmp_12 = call i5 @_ssdm_op_PartSelect.i5.i33.i32.i32(i33 %sum, i32 2, i32 6)

ST_2: tmp_7 [1/1] 0.00ns
_ifconv:7  %tmp_7 = sext i5 %tmp_12 to i64

ST_2: x_0_id_addr [1/1] 0.00ns
_ifconv:8  %x_0_id_addr = getelementptr [481 x i32]* %x_0_id, i64 0, i64 %tmp_7

ST_2: x_1_id_addr [1/1] 0.00ns
_ifconv:9  %x_1_id_addr = getelementptr [481 x i32]* %x_1_id, i64 0, i64 %tmp_7

ST_2: x_2_id_addr [1/1] 0.00ns
_ifconv:10  %x_2_id_addr = getelementptr [444 x i32]* %x_2_id, i64 0, i64 %tmp_7

ST_2: x_3_id_addr [1/1] 0.00ns
_ifconv:11  %x_3_id_addr = getelementptr [444 x i32]* %x_3_id, i64 0, i64 %tmp_7

ST_2: x_3_id_load [2/2] 2.39ns
_ifconv:12  %x_3_id_load = load i32* %x_3_id_addr, align 4

ST_2: x_0_id_load [2/2] 2.39ns
_ifconv:13  %x_0_id_load = load i32* %x_0_id_addr, align 4

ST_2: x_1_id_load [2/2] 2.39ns
_ifconv:14  %x_1_id_load = load i32* %x_1_id_addr, align 4

ST_2: x_2_id_load [2/2] 2.39ns
_ifconv:15  %x_2_id_load = load i32* %x_2_id_addr, align 4

ST_2: tmp_21_cast_cast [1/1] 0.00ns
_ifconv:22  %tmp_21_cast_cast = sext i32 %p2 to i33

ST_2: sum1 [1/1] 2.44ns
_ifconv:23  %sum1 = add i33 %tmp_16_cast, %tmp_21_cast_cast

ST_2: tmp_25 [1/1] 0.00ns
_ifconv:24  %tmp_25 = trunc i33 %sum1 to i2

ST_2: tmp_20 [1/1] 0.00ns
_ifconv:25  %tmp_20 = call i5 @_ssdm_op_PartSelect.i5.i33.i32.i32(i33 %sum1, i32 2, i32 6)

ST_2: tmp_8 [1/1] 0.00ns
_ifconv:26  %tmp_8 = sext i5 %tmp_20 to i64

ST_2: y_0_id_addr [1/1] 0.00ns
_ifconv:27  %y_0_id_addr = getelementptr [650 x i32]* %y_0_id, i64 0, i64 %tmp_8

ST_2: y_1_id_addr [1/1] 0.00ns
_ifconv:28  %y_1_id_addr = getelementptr [650 x i32]* %y_1_id, i64 0, i64 %tmp_8

ST_2: y_2_id_addr [1/1] 0.00ns
_ifconv:29  %y_2_id_addr = getelementptr [600 x i32]* %y_2_id, i64 0, i64 %tmp_8

ST_2: y_3_id_addr [1/1] 0.00ns
_ifconv:30  %y_3_id_addr = getelementptr [600 x i32]* %y_3_id, i64 0, i64 %tmp_8

ST_2: y_3_id_load [2/2] 2.39ns
_ifconv:31  %y_3_id_load = load i32* %y_3_id_addr, align 4

ST_2: y_0_id_load [2/2] 2.39ns
_ifconv:32  %y_0_id_load = load i32* %y_0_id_addr, align 4

ST_2: y_1_id_load [2/2] 2.39ns
_ifconv:33  %y_1_id_load = load i32* %y_1_id_addr, align 4

ST_2: y_2_id_load [2/2] 2.39ns
_ifconv:34  %y_2_id_load = load i32* %y_2_id_addr, align 4

ST_2: x_0_value_addr [1/1] 0.00ns
_ifconv:42  %x_0_value_addr = getelementptr [481 x double]* %x_0_value, i64 0, i64 %tmp_7

ST_2: x_1_value_addr [1/1] 0.00ns
_ifconv:43  %x_1_value_addr = getelementptr [481 x double]* %x_1_value, i64 0, i64 %tmp_7

ST_2: x_2_value_addr [1/1] 0.00ns
_ifconv:44  %x_2_value_addr = getelementptr [444 x double]* %x_2_value, i64 0, i64 %tmp_7

ST_2: x_3_value_addr [1/1] 0.00ns
_ifconv:45  %x_3_value_addr = getelementptr [444 x double]* %x_3_value, i64 0, i64 %tmp_7

ST_2: x_3_value_load [2/2] 2.39ns
_ifconv:51  %x_3_value_load = load double* %x_3_value_addr, align 8

ST_2: x_0_value_load [2/2] 2.39ns
_ifconv:52  %x_0_value_load = load double* %x_0_value_addr, align 8

ST_2: x_1_value_load [2/2] 2.39ns
_ifconv:53  %x_1_value_load = load double* %x_1_value_addr, align 8

ST_2: x_2_value_load [2/2] 2.39ns
_ifconv:54  %x_2_value_load = load double* %x_2_value_addr, align 8

ST_2: y_0_value_addr [1/1] 0.00ns
_ifconv:58  %y_0_value_addr = getelementptr [650 x double]* %y_0_value, i64 0, i64 %tmp_8

ST_2: y_1_value_addr [1/1] 0.00ns
_ifconv:59  %y_1_value_addr = getelementptr [650 x double]* %y_1_value, i64 0, i64 %tmp_8

ST_2: y_2_value_addr [1/1] 0.00ns
_ifconv:60  %y_2_value_addr = getelementptr [600 x double]* %y_2_value, i64 0, i64 %tmp_8

ST_2: y_3_value_addr [1/1] 0.00ns
_ifconv:61  %y_3_value_addr = getelementptr [600 x double]* %y_3_value, i64 0, i64 %tmp_8

ST_2: y_3_value_load [2/2] 2.39ns
_ifconv:62  %y_3_value_load = load double* %y_3_value_addr, align 8

ST_2: y_0_value_load [2/2] 2.39ns
_ifconv:63  %y_0_value_load = load double* %y_0_value_addr, align 8

ST_2: y_1_value_load [2/2] 2.39ns
_ifconv:64  %y_1_value_load = load double* %y_1_value_addr, align 8

ST_2: y_2_value_load [2/2] 2.39ns
_ifconv:65  %y_2_value_load = load double* %y_2_value_addr, align 8


 <State 3>: 6.50ns
ST_3: x_3_id_load [1/2] 2.39ns
_ifconv:12  %x_3_id_load = load i32* %x_3_id_addr, align 4

ST_3: x_0_id_load [1/2] 2.39ns
_ifconv:13  %x_0_id_load = load i32* %x_0_id_addr, align 4

ST_3: x_1_id_load [1/2] 2.39ns
_ifconv:14  %x_1_id_load = load i32* %x_1_id_addr, align 4

ST_3: x_2_id_load [1/2] 2.39ns
_ifconv:15  %x_2_id_load = load i32* %x_2_id_addr, align 4

ST_3: sel_tmp [1/1] 1.36ns
_ifconv:16  %sel_tmp = icmp eq i2 %tmp_13, 0

ST_3: sel_tmp1 [1/1] 1.37ns
_ifconv:17  %sel_tmp1 = select i1 %sel_tmp, i32 %x_0_id_load, i32 %x_3_id_load

ST_3: sel_tmp2 [1/1] 1.36ns
_ifconv:18  %sel_tmp2 = icmp eq i2 %tmp_13, 1

ST_3: sel_tmp3 [1/1] 1.37ns
_ifconv:19  %sel_tmp3 = select i1 %sel_tmp2, i32 %x_1_id_load, i32 %sel_tmp1

ST_3: sel_tmp4 [1/1] 1.36ns
_ifconv:20  %sel_tmp4 = icmp eq i2 %tmp_13, -2

ST_3: a1 [1/1] 1.37ns
_ifconv:21  %a1 = select i1 %sel_tmp4, i32 %x_2_id_load, i32 %sel_tmp3

ST_3: y_3_id_load [1/2] 2.39ns
_ifconv:31  %y_3_id_load = load i32* %y_3_id_addr, align 4

ST_3: y_0_id_load [1/2] 2.39ns
_ifconv:32  %y_0_id_load = load i32* %y_0_id_addr, align 4

ST_3: y_1_id_load [1/2] 2.39ns
_ifconv:33  %y_1_id_load = load i32* %y_1_id_addr, align 4

ST_3: y_2_id_load [1/2] 2.39ns
_ifconv:34  %y_2_id_load = load i32* %y_2_id_addr, align 4

ST_3: sel_tmp6 [1/1] 1.36ns
_ifconv:35  %sel_tmp6 = icmp eq i2 %tmp_25, 0

ST_3: sel_tmp7 [1/1] 1.37ns
_ifconv:36  %sel_tmp7 = select i1 %sel_tmp6, i32 %y_0_id_load, i32 %y_3_id_load

ST_3: sel_tmp8 [1/1] 1.36ns
_ifconv:37  %sel_tmp8 = icmp eq i2 %tmp_25, 1

ST_3: sel_tmp9 [1/1] 1.37ns
_ifconv:38  %sel_tmp9 = select i1 %sel_tmp8, i32 %y_1_id_load, i32 %sel_tmp7

ST_3: sel_tmp5 [1/1] 1.36ns
_ifconv:39  %sel_tmp5 = icmp eq i2 %tmp_25, -2

ST_3: a2 [1/1] 1.37ns
_ifconv:40  %a2 = select i1 %sel_tmp5, i32 %y_2_id_load, i32 %sel_tmp9

ST_3: x_3_value_load [1/2] 2.39ns
_ifconv:51  %x_3_value_load = load double* %x_3_value_addr, align 8

ST_3: x_0_value_load [1/2] 2.39ns
_ifconv:52  %x_0_value_load = load double* %x_0_value_addr, align 8

ST_3: x_1_value_load [1/2] 2.39ns
_ifconv:53  %x_1_value_load = load double* %x_1_value_addr, align 8

ST_3: x_2_value_load [1/2] 2.39ns
_ifconv:54  %x_2_value_load = load double* %x_2_value_addr, align 8

ST_3: sel_tmp10 [1/1] 1.37ns
_ifconv:55  %sel_tmp10 = select i1 %sel_tmp, double %x_0_value_load, double %x_3_value_load

ST_3: sel_tmp11 [1/1] 1.37ns
_ifconv:56  %sel_tmp11 = select i1 %sel_tmp2, double %x_1_value_load, double %sel_tmp10

ST_3: x_value_load_phi [1/1] 1.37ns
_ifconv:57  %x_value_load_phi = select i1 %sel_tmp4, double %x_2_value_load, double %sel_tmp11

ST_3: y_3_value_load [1/2] 2.39ns
_ifconv:62  %y_3_value_load = load double* %y_3_value_addr, align 8

ST_3: y_0_value_load [1/2] 2.39ns
_ifconv:63  %y_0_value_load = load double* %y_0_value_addr, align 8

ST_3: y_1_value_load [1/2] 2.39ns
_ifconv:64  %y_1_value_load = load double* %y_1_value_addr, align 8

ST_3: y_2_value_load [1/2] 2.39ns
_ifconv:65  %y_2_value_load = load double* %y_2_value_addr, align 8

ST_3: sel_tmp12 [1/1] 1.37ns
_ifconv:66  %sel_tmp12 = select i1 %sel_tmp6, double %y_0_value_load, double %y_3_value_load

ST_3: sel_tmp13 [1/1] 1.37ns
_ifconv:67  %sel_tmp13 = select i1 %sel_tmp8, double %y_1_value_load, double %sel_tmp12

ST_3: y_value_load_phi [1/1] 1.37ns
_ifconv:68  %y_value_load_phi = select i1 %sel_tmp5, double %y_2_value_load, double %sel_tmp13


 <State 4>: 5.26ns
ST_4: tmp_21 [1/1] 2.52ns
_ifconv:41  %tmp_21 = icmp eq i32 %a1, %a2

ST_4: tmp_22 [1/1] 2.52ns
_ifconv:46  %tmp_22 = icmp sgt i32 %a1, %a2

ST_4: p2_3 [1/1] 2.44ns
_ifconv:47  %p2_3 = add nsw i32 1, %p2

ST_4: p1_3 [1/1] 2.44ns
_ifconv:48  %p1_3 = add nsw i32 1, %p1

ST_4: p1_1 [1/1] 1.37ns
_ifconv:49  %p1_1 = select i1 %tmp_22, i32 %p1, i32 %p1_3

ST_4: p2_1 [1/1] 1.37ns
_ifconv:50  %p2_1 = select i1 %tmp_22, i32 %p2_3, i32 %p2

ST_4: p1_2 [1/1] 1.37ns
_ifconv:73  %p1_2 = select i1 %tmp_21, i32 %p1_3, i32 %p1_1

ST_4: p2_2 [1/1] 1.37ns
_ifconv:74  %p2_2 = select i1 %tmp_21, i32 %p2_3, i32 %p2_1


 <State 5>: 7.79ns
ST_5: tmp_23 [6/6] 7.79ns
_ifconv:69  %tmp_23 = fmul double %x_value_load_phi, %y_value_load_phi


 <State 6>: 7.79ns
ST_6: tmp_23 [5/6] 7.79ns
_ifconv:69  %tmp_23 = fmul double %x_value_load_phi, %y_value_load_phi


 <State 7>: 7.79ns
ST_7: tmp_23 [4/6] 7.79ns
_ifconv:69  %tmp_23 = fmul double %x_value_load_phi, %y_value_load_phi


 <State 8>: 7.79ns
ST_8: tmp_23 [3/6] 7.79ns
_ifconv:69  %tmp_23 = fmul double %x_value_load_phi, %y_value_load_phi


 <State 9>: 7.79ns
ST_9: tmp_23 [2/6] 7.79ns
_ifconv:69  %tmp_23 = fmul double %x_value_load_phi, %y_value_load_phi


 <State 10>: 7.79ns
ST_10: tmp_23 [1/6] 7.79ns
_ifconv:69  %tmp_23 = fmul double %x_value_load_phi, %y_value_load_phi


 <State 11>: 6.50ns
ST_11: t1 [1/1] 6.50ns
_ifconv:70  %t1 = fptrunc double %tmp_23 to float


 <State 12>: 5.55ns
ST_12: tmp_24 [1/1] 5.55ns
_ifconv:71  %tmp_24 = fpext float %t1 to double


 <State 13>: 8.23ns
ST_13: dot_2 [5/5] 8.23ns
_ifconv:72  %dot_2 = fadd double %dot, %tmp_24


 <State 14>: 8.23ns
ST_14: dot_2 [4/5] 8.23ns
_ifconv:72  %dot_2 = fadd double %dot, %tmp_24


 <State 15>: 8.23ns
ST_15: dot_2 [3/5] 8.23ns
_ifconv:72  %dot_2 = fadd double %dot, %tmp_24


 <State 16>: 8.23ns
ST_16: dot_2 [2/5] 8.23ns
_ifconv:72  %dot_2 = fadd double %dot, %tmp_24


 <State 17>: 8.23ns
ST_17: dot_2 [1/5] 8.23ns
_ifconv:72  %dot_2 = fadd double %dot, %tmp_24


 <State 18>: 1.37ns
ST_18: stg_155 [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str824) nounwind

ST_18: tmp_19 [1/1] 0.00ns
_ifconv:1  %tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str824)

ST_18: stg_157 [1/1] 0.00ns
_ifconv:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 49, i32 24, [1 x i8]* @p_str317) nounwind

ST_18: dot_1 [1/1] 1.37ns
_ifconv:75  %dot_1 = select i1 %tmp_21, double %dot_2, double %dot

ST_18: empty_91 [1/1] 0.00ns
_ifconv:76  %empty_91 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str824, i32 %tmp_19)

ST_18: stg_160 [1/1] 0.00ns
_ifconv:77  br label %.preheader


 <State 19>: 0.00ns
ST_19: p_0 [1/1] 0.00ns
.loopexit:0  %p_0 = phi double [ 0.000000e+00, %0 ], [ %dot, %.preheader ]

ST_19: stg_162 [1/1] 0.00ns
.loopexit:1  ret double %p_0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
