<profile>

<section name = "Vivado HLS Report for 'synth_top_writeResult'" level="0">
<item name = "Date">Thu May 21 18:38:34 2015
</item>
<item name = "Version">2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)</item>
<item name = "Project">smosynth.prj</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg484-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="default">10.00, 8.23, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">1, 1691053, 1, 1691053, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="grp_synth_top_classifyPoly_fu_149">synth_top_classifyPoly, 148152, 1691052, 148152, 1691052, none</column>
<column name="grp_synth_top_classifyLinear_fu_193">synth_top_classifyLinear, 251, 37751, 251, 37751, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="Expression">-, -, 0, 24</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, 137, 8955, 13777</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, 179</column>
<column name="Register">-, -, 7, -</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">0, 62, 8, 26</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="grp_synth_top_classifyLinear_fu_193">synth_top_classifyLinear, 0, 15, 1652, 3008</column>
<column name="grp_synth_top_classifyPoly_fu_149">synth_top_classifyPoly, 0, 122, 7303, 10769</column>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_sig_bdd_274">and, 0, 0, 1, 1, 1</column>
<column name="tmp_1_fu_225_p2">icmp, 0, 0, 11, 32, 1</column>
<column name="tmp_fu_219_p2">icmp, 0, 0, 11, 32, 1</column>
<column name="ap_sig_bdd_141">or, 0, 0, 1, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">1, 3, 1, 3</column>
<column name="example_0_id_address0">10, 3, 10, 30</column>
<column name="example_0_id_ce0">1, 3, 1, 3</column>
<column name="example_0_value_address0">10, 3, 10, 30</column>
<column name="example_0_value_ce0">1, 3, 1, 3</column>
<column name="example_1_id_address0">10, 3, 10, 30</column>
<column name="example_1_id_ce0">1, 3, 1, 3</column>
<column name="example_1_value_address0">10, 3, 10, 30</column>
<column name="example_1_value_ce0">1, 3, 1, 3</column>
<column name="example_2_id_address0">10, 3, 10, 30</column>
<column name="example_2_id_ce0">1, 3, 1, 3</column>
<column name="example_2_value_address0">10, 3, 10, 30</column>
<column name="example_2_value_ce0">1, 3, 1, 3</column>
<column name="example_3_id_address0">10, 3, 10, 30</column>
<column name="example_3_id_ce0">1, 3, 1, 3</column>
<column name="example_3_value_address0">10, 3, 10, 30</column>
<column name="example_3_value_ce0">1, 3, 1, 3</column>
<column name="lambda_ce0">1, 2, 1, 2</column>
<column name="nonZeroFeature_address0">6, 3, 6, 18</column>
<column name="nonZeroFeature_ce0">1, 3, 1, 3</column>
<column name="output_r_address0">6, 3, 6, 18</column>
<column name="output_r_ce0">1, 3, 1, 3</column>
<column name="output_r_d0">64, 3, 64, 192</column>
<column name="output_r_we0">1, 3, 1, 3</column>
<column name="svNonZeroFeature_ce0">1, 2, 1, 2</column>
<column name="sv_0_id_ce0">1, 2, 1, 2</column>
<column name="sv_0_value_ce0">1, 2, 1, 2</column>
<column name="sv_1_id_ce0">1, 2, 1, 2</column>
<column name="sv_1_value_ce0">1, 2, 1, 2</column>
<column name="sv_2_id_ce0">1, 2, 1, 2</column>
<column name="sv_2_value_ce0">1, 2, 1, 2</column>
<column name="sv_3_id_ce0">1, 2, 1, 2</column>
<column name="sv_3_value_ce0">1, 2, 1, 2</column>
<column name="weight_ce0">1, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">2, 0, 2, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="grp_synth_top_classifyLinear_fu_193_ap_start_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_synth_top_classifyPoly_fu_149_ap_start_ap_start_reg">1, 0, 1, 0</column>
<column name="tmp_1_reg_235">1, 0, 1, 0</column>
<column name="tmp_reg_231">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, synth_top_writeResult, return value</column>
<column name="example_0_id_address0">out, 10, ap_memory, example_0_id, array</column>
<column name="example_0_id_ce0">out, 1, ap_memory, example_0_id, array</column>
<column name="example_0_id_q0">in, 32, ap_memory, example_0_id, array</column>
<column name="example_1_id_address0">out, 10, ap_memory, example_1_id, array</column>
<column name="example_1_id_ce0">out, 1, ap_memory, example_1_id, array</column>
<column name="example_1_id_q0">in, 32, ap_memory, example_1_id, array</column>
<column name="example_2_id_address0">out, 10, ap_memory, example_2_id, array</column>
<column name="example_2_id_ce0">out, 1, ap_memory, example_2_id, array</column>
<column name="example_2_id_q0">in, 32, ap_memory, example_2_id, array</column>
<column name="example_3_id_address0">out, 10, ap_memory, example_3_id, array</column>
<column name="example_3_id_ce0">out, 1, ap_memory, example_3_id, array</column>
<column name="example_3_id_q0">in, 32, ap_memory, example_3_id, array</column>
<column name="example_0_value_address0">out, 10, ap_memory, example_0_value, array</column>
<column name="example_0_value_ce0">out, 1, ap_memory, example_0_value, array</column>
<column name="example_0_value_q0">in, 64, ap_memory, example_0_value, array</column>
<column name="example_1_value_address0">out, 10, ap_memory, example_1_value, array</column>
<column name="example_1_value_ce0">out, 1, ap_memory, example_1_value, array</column>
<column name="example_1_value_q0">in, 64, ap_memory, example_1_value, array</column>
<column name="example_2_value_address0">out, 10, ap_memory, example_2_value, array</column>
<column name="example_2_value_ce0">out, 1, ap_memory, example_2_value, array</column>
<column name="example_2_value_q0">in, 64, ap_memory, example_2_value, array</column>
<column name="example_3_value_address0">out, 10, ap_memory, example_3_value, array</column>
<column name="example_3_value_ce0">out, 1, ap_memory, example_3_value, array</column>
<column name="example_3_value_q0">in, 64, ap_memory, example_3_value, array</column>
<column name="sv_0_id_address0">out, 9, ap_memory, sv_0_id, array</column>
<column name="sv_0_id_ce0">out, 1, ap_memory, sv_0_id, array</column>
<column name="sv_0_id_q0">in, 32, ap_memory, sv_0_id, array</column>
<column name="sv_1_id_address0">out, 9, ap_memory, sv_1_id, array</column>
<column name="sv_1_id_ce0">out, 1, ap_memory, sv_1_id, array</column>
<column name="sv_1_id_q0">in, 32, ap_memory, sv_1_id, array</column>
<column name="sv_2_id_address0">out, 9, ap_memory, sv_2_id, array</column>
<column name="sv_2_id_ce0">out, 1, ap_memory, sv_2_id, array</column>
<column name="sv_2_id_q0">in, 32, ap_memory, sv_2_id, array</column>
<column name="sv_3_id_address0">out, 9, ap_memory, sv_3_id, array</column>
<column name="sv_3_id_ce0">out, 1, ap_memory, sv_3_id, array</column>
<column name="sv_3_id_q0">in, 32, ap_memory, sv_3_id, array</column>
<column name="sv_0_value_address0">out, 9, ap_memory, sv_0_value, array</column>
<column name="sv_0_value_ce0">out, 1, ap_memory, sv_0_value, array</column>
<column name="sv_0_value_q0">in, 64, ap_memory, sv_0_value, array</column>
<column name="sv_1_value_address0">out, 9, ap_memory, sv_1_value, array</column>
<column name="sv_1_value_ce0">out, 1, ap_memory, sv_1_value, array</column>
<column name="sv_1_value_q0">in, 64, ap_memory, sv_1_value, array</column>
<column name="sv_2_value_address0">out, 9, ap_memory, sv_2_value, array</column>
<column name="sv_2_value_ce0">out, 1, ap_memory, sv_2_value, array</column>
<column name="sv_2_value_q0">in, 64, ap_memory, sv_2_value, array</column>
<column name="sv_3_value_address0">out, 9, ap_memory, sv_3_value, array</column>
<column name="sv_3_value_ce0">out, 1, ap_memory, sv_3_value, array</column>
<column name="sv_3_value_q0">in, 64, ap_memory, sv_3_value, array</column>
<column name="lambda_address0">out, 6, ap_memory, lambda, array</column>
<column name="lambda_ce0">out, 1, ap_memory, lambda, array</column>
<column name="lambda_q0">in, 64, ap_memory, lambda, array</column>
<column name="svNonZeroFeature_address0">out, 6, ap_memory, svNonZeroFeature, array</column>
<column name="svNonZeroFeature_ce0">out, 1, ap_memory, svNonZeroFeature, array</column>
<column name="svNonZeroFeature_q0">in, 32, ap_memory, svNonZeroFeature, array</column>
<column name="nonZeroFeature_address0">out, 6, ap_memory, nonZeroFeature, array</column>
<column name="nonZeroFeature_ce0">out, 1, ap_memory, nonZeroFeature, array</column>
<column name="nonZeroFeature_q0">in, 32, ap_memory, nonZeroFeature, array</column>
<column name="weight_address0">out, 6, ap_memory, weight, array</column>
<column name="weight_ce0">out, 1, ap_memory, weight, array</column>
<column name="weight_q0">in, 64, ap_memory, weight, array</column>
<column name="output_r_address0">out, 6, ap_memory, output_r, array</column>
<column name="output_r_ce0">out, 1, ap_memory, output_r, array</column>
<column name="output_r_we0">out, 1, ap_memory, output_r, array</column>
<column name="output_r_d0">out, 64, ap_memory, output_r, array</column>
<column name="output_r_q0">in, 64, ap_memory, output_r, array</column>
<column name="kernelType">in, 32, ap_none, kernelType, scalar</column>
</table>
</item>
</section>
</profile>
