-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity synth_top is
generic (
    C_S_AXI_SMO_IO_ADDR_WIDTH : INTEGER := 17;
    C_S_AXI_SMO_IO_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_smo_io_AWVALID : IN STD_LOGIC;
    s_axi_smo_io_AWREADY : OUT STD_LOGIC;
    s_axi_smo_io_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_SMO_IO_ADDR_WIDTH-1 downto 0);
    s_axi_smo_io_WVALID : IN STD_LOGIC;
    s_axi_smo_io_WREADY : OUT STD_LOGIC;
    s_axi_smo_io_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_SMO_IO_DATA_WIDTH-1 downto 0);
    s_axi_smo_io_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_SMO_IO_DATA_WIDTH/8-1 downto 0);
    s_axi_smo_io_ARVALID : IN STD_LOGIC;
    s_axi_smo_io_ARREADY : OUT STD_LOGIC;
    s_axi_smo_io_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_SMO_IO_ADDR_WIDTH-1 downto 0);
    s_axi_smo_io_RVALID : OUT STD_LOGIC;
    s_axi_smo_io_RREADY : IN STD_LOGIC;
    s_axi_smo_io_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_SMO_IO_DATA_WIDTH-1 downto 0);
    s_axi_smo_io_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_smo_io_BVALID : OUT STD_LOGIC;
    s_axi_smo_io_BREADY : IN STD_LOGIC;
    s_axi_smo_io_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC );
end;


architecture behav of synth_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "synth_top,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.232000,HLS_SYN_LAT=179019,HLS_SYN_TPT=179020,HLS_SYN_MEM=64,HLS_SYN_DSP=137,HLS_SYN_FF=10750,HLS_SYN_LUT=15618}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_true : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal synth_top_smo_io_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal example_0_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_0_id_ce0 : STD_LOGIC;
    signal example_0_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal example_1_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_1_id_ce0 : STD_LOGIC;
    signal example_1_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal example_2_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_2_id_ce0 : STD_LOGIC;
    signal example_2_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal example_3_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_3_id_ce0 : STD_LOGIC;
    signal example_3_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal example_0_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_0_value_ce0 : STD_LOGIC;
    signal example_0_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal example_1_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_1_value_ce0 : STD_LOGIC;
    signal example_1_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal example_2_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_2_value_ce0 : STD_LOGIC;
    signal example_2_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal example_3_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal example_3_value_ce0 : STD_LOGIC;
    signal example_3_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal sv_0_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_0_id_ce0 : STD_LOGIC;
    signal sv_0_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sv_1_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_1_id_ce0 : STD_LOGIC;
    signal sv_1_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sv_2_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_2_id_ce0 : STD_LOGIC;
    signal sv_2_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sv_3_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_3_id_ce0 : STD_LOGIC;
    signal sv_3_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sv_0_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_0_value_ce0 : STD_LOGIC;
    signal sv_0_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal sv_1_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_1_value_ce0 : STD_LOGIC;
    signal sv_1_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal sv_2_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_2_value_ce0 : STD_LOGIC;
    signal sv_2_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal sv_3_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sv_3_value_ce0 : STD_LOGIC;
    signal sv_3_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lambda_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal lambda_ce0 : STD_LOGIC;
    signal lambda_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal svNonZeroFeature_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal svNonZeroFeature_ce0 : STD_LOGIC;
    signal svNonZeroFeature_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal nonZeroFeature_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal nonZeroFeature_ce0 : STD_LOGIC;
    signal nonZeroFeature_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight_ce0 : STD_LOGIC;
    signal weight_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_r_ce0 : STD_LOGIC;
    signal output_r_we0 : STD_LOGIC;
    signal output_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernelType : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_ap_start : STD_LOGIC;
    signal synth_top_writeResult_U0_ap_done : STD_LOGIC;
    signal synth_top_writeResult_U0_ap_continue : STD_LOGIC;
    signal synth_top_writeResult_U0_ap_idle : STD_LOGIC;
    signal synth_top_writeResult_U0_ap_ready : STD_LOGIC;
    signal synth_top_writeResult_U0_example_0_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_0_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_0_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_example_1_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_1_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_1_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_example_2_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_2_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_2_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_example_3_id_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_3_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_3_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_example_0_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_0_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_0_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_example_1_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_1_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_1_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_example_2_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_2_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_2_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_example_3_value_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal synth_top_writeResult_U0_example_3_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_example_3_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_sv_0_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_0_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_0_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_sv_1_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_1_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_1_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_sv_2_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_2_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_2_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_sv_3_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_3_id_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_3_id_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_sv_0_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_0_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_0_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_sv_1_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_1_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_1_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_sv_2_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_2_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_2_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_sv_3_value_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal synth_top_writeResult_U0_sv_3_value_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_sv_3_value_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_lambda_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal synth_top_writeResult_U0_lambda_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_lambda_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_svNonZeroFeature_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal synth_top_writeResult_U0_svNonZeroFeature_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_svNonZeroFeature_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_nonZeroFeature_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal synth_top_writeResult_U0_nonZeroFeature_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_nonZeroFeature_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synth_top_writeResult_U0_weight_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal synth_top_writeResult_U0_weight_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_weight_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_output_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal synth_top_writeResult_U0_output_r_ce0 : STD_LOGIC;
    signal synth_top_writeResult_U0_output_r_we0 : STD_LOGIC;
    signal synth_top_writeResult_U0_output_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_output_r_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal synth_top_writeResult_U0_kernelType : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_procdone_synth_top_writeResult_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;
    signal ap_sig_hs_continue : STD_LOGIC;

    component synth_top_writeResult IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        example_0_id_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_0_id_ce0 : OUT STD_LOGIC;
        example_0_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        example_1_id_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_1_id_ce0 : OUT STD_LOGIC;
        example_1_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        example_2_id_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_2_id_ce0 : OUT STD_LOGIC;
        example_2_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        example_3_id_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_3_id_ce0 : OUT STD_LOGIC;
        example_3_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        example_0_value_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_0_value_ce0 : OUT STD_LOGIC;
        example_0_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        example_1_value_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_1_value_ce0 : OUT STD_LOGIC;
        example_1_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        example_2_value_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_2_value_ce0 : OUT STD_LOGIC;
        example_2_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        example_3_value_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        example_3_value_ce0 : OUT STD_LOGIC;
        example_3_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sv_0_id_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_0_id_ce0 : OUT STD_LOGIC;
        sv_0_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sv_1_id_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_1_id_ce0 : OUT STD_LOGIC;
        sv_1_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sv_2_id_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_2_id_ce0 : OUT STD_LOGIC;
        sv_2_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sv_3_id_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_3_id_ce0 : OUT STD_LOGIC;
        sv_3_id_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sv_0_value_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_0_value_ce0 : OUT STD_LOGIC;
        sv_0_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sv_1_value_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_1_value_ce0 : OUT STD_LOGIC;
        sv_1_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sv_2_value_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_2_value_ce0 : OUT STD_LOGIC;
        sv_2_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sv_3_value_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        sv_3_value_ce0 : OUT STD_LOGIC;
        sv_3_value_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        lambda_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        lambda_ce0 : OUT STD_LOGIC;
        lambda_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        svNonZeroFeature_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        svNonZeroFeature_ce0 : OUT STD_LOGIC;
        svNonZeroFeature_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        nonZeroFeature_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        nonZeroFeature_ce0 : OUT STD_LOGIC;
        nonZeroFeature_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernelType : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component synth_top_smo_io_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        example_0_id_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_0_id_ce0 : IN STD_LOGIC;
        example_0_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        example_1_id_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_1_id_ce0 : IN STD_LOGIC;
        example_1_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        example_2_id_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_2_id_ce0 : IN STD_LOGIC;
        example_2_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        example_3_id_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_3_id_ce0 : IN STD_LOGIC;
        example_3_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        example_0_value_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_0_value_ce0 : IN STD_LOGIC;
        example_0_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        example_1_value_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_1_value_ce0 : IN STD_LOGIC;
        example_1_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        example_2_value_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_2_value_ce0 : IN STD_LOGIC;
        example_2_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        example_3_value_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        example_3_value_ce0 : IN STD_LOGIC;
        example_3_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sv_0_id_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_0_id_ce0 : IN STD_LOGIC;
        sv_0_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sv_1_id_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_1_id_ce0 : IN STD_LOGIC;
        sv_1_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sv_2_id_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_2_id_ce0 : IN STD_LOGIC;
        sv_2_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sv_3_id_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_3_id_ce0 : IN STD_LOGIC;
        sv_3_id_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sv_0_value_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_0_value_ce0 : IN STD_LOGIC;
        sv_0_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sv_1_value_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_1_value_ce0 : IN STD_LOGIC;
        sv_1_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sv_2_value_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_2_value_ce0 : IN STD_LOGIC;
        sv_2_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sv_3_value_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        sv_3_value_ce0 : IN STD_LOGIC;
        sv_3_value_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        lambda_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        lambda_ce0 : IN STD_LOGIC;
        lambda_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        svNonZeroFeature_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        svNonZeroFeature_ce0 : IN STD_LOGIC;
        svNonZeroFeature_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        nonZeroFeature_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        nonZeroFeature_ce0 : IN STD_LOGIC;
        nonZeroFeature_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        weight_ce0 : IN STD_LOGIC;
        weight_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        output_r_ce0 : IN STD_LOGIC;
        output_r_we0 : IN STD_LOGIC;
        output_r_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        output_r_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        kernelType : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    synth_top_smo_io_s_axi_U : component synth_top_smo_io_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_SMO_IO_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_SMO_IO_DATA_WIDTH)
    port map (
        AWVALID => s_axi_smo_io_AWVALID,
        AWREADY => s_axi_smo_io_AWREADY,
        AWADDR => s_axi_smo_io_AWADDR,
        WVALID => s_axi_smo_io_WVALID,
        WREADY => s_axi_smo_io_WREADY,
        WDATA => s_axi_smo_io_WDATA,
        WSTRB => s_axi_smo_io_WSTRB,
        ARVALID => s_axi_smo_io_ARVALID,
        ARREADY => s_axi_smo_io_ARREADY,
        ARADDR => s_axi_smo_io_ARADDR,
        RVALID => s_axi_smo_io_RVALID,
        RREADY => s_axi_smo_io_RREADY,
        RDATA => s_axi_smo_io_RDATA,
        RRESP => s_axi_smo_io_RRESP,
        BVALID => s_axi_smo_io_BVALID,
        BREADY => s_axi_smo_io_BREADY,
        BRESP => s_axi_smo_io_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => synth_top_smo_io_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_return,
        example_0_id_address0 => example_0_id_address0,
        example_0_id_ce0 => example_0_id_ce0,
        example_0_id_q0 => example_0_id_q0,
        example_1_id_address0 => example_1_id_address0,
        example_1_id_ce0 => example_1_id_ce0,
        example_1_id_q0 => example_1_id_q0,
        example_2_id_address0 => example_2_id_address0,
        example_2_id_ce0 => example_2_id_ce0,
        example_2_id_q0 => example_2_id_q0,
        example_3_id_address0 => example_3_id_address0,
        example_3_id_ce0 => example_3_id_ce0,
        example_3_id_q0 => example_3_id_q0,
        example_0_value_address0 => example_0_value_address0,
        example_0_value_ce0 => example_0_value_ce0,
        example_0_value_q0 => example_0_value_q0,
        example_1_value_address0 => example_1_value_address0,
        example_1_value_ce0 => example_1_value_ce0,
        example_1_value_q0 => example_1_value_q0,
        example_2_value_address0 => example_2_value_address0,
        example_2_value_ce0 => example_2_value_ce0,
        example_2_value_q0 => example_2_value_q0,
        example_3_value_address0 => example_3_value_address0,
        example_3_value_ce0 => example_3_value_ce0,
        example_3_value_q0 => example_3_value_q0,
        sv_0_id_address0 => sv_0_id_address0,
        sv_0_id_ce0 => sv_0_id_ce0,
        sv_0_id_q0 => sv_0_id_q0,
        sv_1_id_address0 => sv_1_id_address0,
        sv_1_id_ce0 => sv_1_id_ce0,
        sv_1_id_q0 => sv_1_id_q0,
        sv_2_id_address0 => sv_2_id_address0,
        sv_2_id_ce0 => sv_2_id_ce0,
        sv_2_id_q0 => sv_2_id_q0,
        sv_3_id_address0 => sv_3_id_address0,
        sv_3_id_ce0 => sv_3_id_ce0,
        sv_3_id_q0 => sv_3_id_q0,
        sv_0_value_address0 => sv_0_value_address0,
        sv_0_value_ce0 => sv_0_value_ce0,
        sv_0_value_q0 => sv_0_value_q0,
        sv_1_value_address0 => sv_1_value_address0,
        sv_1_value_ce0 => sv_1_value_ce0,
        sv_1_value_q0 => sv_1_value_q0,
        sv_2_value_address0 => sv_2_value_address0,
        sv_2_value_ce0 => sv_2_value_ce0,
        sv_2_value_q0 => sv_2_value_q0,
        sv_3_value_address0 => sv_3_value_address0,
        sv_3_value_ce0 => sv_3_value_ce0,
        sv_3_value_q0 => sv_3_value_q0,
        lambda_address0 => lambda_address0,
        lambda_ce0 => lambda_ce0,
        lambda_q0 => lambda_q0,
        svNonZeroFeature_address0 => svNonZeroFeature_address0,
        svNonZeroFeature_ce0 => svNonZeroFeature_ce0,
        svNonZeroFeature_q0 => svNonZeroFeature_q0,
        nonZeroFeature_address0 => nonZeroFeature_address0,
        nonZeroFeature_ce0 => nonZeroFeature_ce0,
        nonZeroFeature_q0 => nonZeroFeature_q0,
        weight_address0 => weight_address0,
        weight_ce0 => weight_ce0,
        weight_q0 => weight_q0,
        output_r_address0 => output_r_address0,
        output_r_ce0 => output_r_ce0,
        output_r_we0 => output_r_we0,
        output_r_d0 => output_r_d0,
        output_r_q0 => output_r_q0,
        kernelType => kernelType);

    synth_top_writeResult_U0 : component synth_top_writeResult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => synth_top_writeResult_U0_ap_start,
        ap_done => synth_top_writeResult_U0_ap_done,
        ap_continue => synth_top_writeResult_U0_ap_continue,
        ap_idle => synth_top_writeResult_U0_ap_idle,
        ap_ready => synth_top_writeResult_U0_ap_ready,
        example_0_id_address0 => synth_top_writeResult_U0_example_0_id_address0,
        example_0_id_ce0 => synth_top_writeResult_U0_example_0_id_ce0,
        example_0_id_q0 => synth_top_writeResult_U0_example_0_id_q0,
        example_1_id_address0 => synth_top_writeResult_U0_example_1_id_address0,
        example_1_id_ce0 => synth_top_writeResult_U0_example_1_id_ce0,
        example_1_id_q0 => synth_top_writeResult_U0_example_1_id_q0,
        example_2_id_address0 => synth_top_writeResult_U0_example_2_id_address0,
        example_2_id_ce0 => synth_top_writeResult_U0_example_2_id_ce0,
        example_2_id_q0 => synth_top_writeResult_U0_example_2_id_q0,
        example_3_id_address0 => synth_top_writeResult_U0_example_3_id_address0,
        example_3_id_ce0 => synth_top_writeResult_U0_example_3_id_ce0,
        example_3_id_q0 => synth_top_writeResult_U0_example_3_id_q0,
        example_0_value_address0 => synth_top_writeResult_U0_example_0_value_address0,
        example_0_value_ce0 => synth_top_writeResult_U0_example_0_value_ce0,
        example_0_value_q0 => synth_top_writeResult_U0_example_0_value_q0,
        example_1_value_address0 => synth_top_writeResult_U0_example_1_value_address0,
        example_1_value_ce0 => synth_top_writeResult_U0_example_1_value_ce0,
        example_1_value_q0 => synth_top_writeResult_U0_example_1_value_q0,
        example_2_value_address0 => synth_top_writeResult_U0_example_2_value_address0,
        example_2_value_ce0 => synth_top_writeResult_U0_example_2_value_ce0,
        example_2_value_q0 => synth_top_writeResult_U0_example_2_value_q0,
        example_3_value_address0 => synth_top_writeResult_U0_example_3_value_address0,
        example_3_value_ce0 => synth_top_writeResult_U0_example_3_value_ce0,
        example_3_value_q0 => synth_top_writeResult_U0_example_3_value_q0,
        sv_0_id_address0 => synth_top_writeResult_U0_sv_0_id_address0,
        sv_0_id_ce0 => synth_top_writeResult_U0_sv_0_id_ce0,
        sv_0_id_q0 => synth_top_writeResult_U0_sv_0_id_q0,
        sv_1_id_address0 => synth_top_writeResult_U0_sv_1_id_address0,
        sv_1_id_ce0 => synth_top_writeResult_U0_sv_1_id_ce0,
        sv_1_id_q0 => synth_top_writeResult_U0_sv_1_id_q0,
        sv_2_id_address0 => synth_top_writeResult_U0_sv_2_id_address0,
        sv_2_id_ce0 => synth_top_writeResult_U0_sv_2_id_ce0,
        sv_2_id_q0 => synth_top_writeResult_U0_sv_2_id_q0,
        sv_3_id_address0 => synth_top_writeResult_U0_sv_3_id_address0,
        sv_3_id_ce0 => synth_top_writeResult_U0_sv_3_id_ce0,
        sv_3_id_q0 => synth_top_writeResult_U0_sv_3_id_q0,
        sv_0_value_address0 => synth_top_writeResult_U0_sv_0_value_address0,
        sv_0_value_ce0 => synth_top_writeResult_U0_sv_0_value_ce0,
        sv_0_value_q0 => synth_top_writeResult_U0_sv_0_value_q0,
        sv_1_value_address0 => synth_top_writeResult_U0_sv_1_value_address0,
        sv_1_value_ce0 => synth_top_writeResult_U0_sv_1_value_ce0,
        sv_1_value_q0 => synth_top_writeResult_U0_sv_1_value_q0,
        sv_2_value_address0 => synth_top_writeResult_U0_sv_2_value_address0,
        sv_2_value_ce0 => synth_top_writeResult_U0_sv_2_value_ce0,
        sv_2_value_q0 => synth_top_writeResult_U0_sv_2_value_q0,
        sv_3_value_address0 => synth_top_writeResult_U0_sv_3_value_address0,
        sv_3_value_ce0 => synth_top_writeResult_U0_sv_3_value_ce0,
        sv_3_value_q0 => synth_top_writeResult_U0_sv_3_value_q0,
        lambda_address0 => synth_top_writeResult_U0_lambda_address0,
        lambda_ce0 => synth_top_writeResult_U0_lambda_ce0,
        lambda_q0 => synth_top_writeResult_U0_lambda_q0,
        svNonZeroFeature_address0 => synth_top_writeResult_U0_svNonZeroFeature_address0,
        svNonZeroFeature_ce0 => synth_top_writeResult_U0_svNonZeroFeature_ce0,
        svNonZeroFeature_q0 => synth_top_writeResult_U0_svNonZeroFeature_q0,
        nonZeroFeature_address0 => synth_top_writeResult_U0_nonZeroFeature_address0,
        nonZeroFeature_ce0 => synth_top_writeResult_U0_nonZeroFeature_ce0,
        nonZeroFeature_q0 => synth_top_writeResult_U0_nonZeroFeature_q0,
        weight_address0 => synth_top_writeResult_U0_weight_address0,
        weight_ce0 => synth_top_writeResult_U0_weight_ce0,
        weight_q0 => synth_top_writeResult_U0_weight_q0,
        output_r_address0 => synth_top_writeResult_U0_output_r_address0,
        output_r_ce0 => synth_top_writeResult_U0_output_r_ce0,
        output_r_we0 => synth_top_writeResult_U0_output_r_we0,
        output_r_d0 => synth_top_writeResult_U0_output_r_d0,
        output_r_q0 => synth_top_writeResult_U0_output_r_q0,
        kernelType => synth_top_writeResult_U0_kernelType);





    -- ap_reg_procdone_synth_top_writeResult_U0 assign process. --
    ap_reg_procdone_synth_top_writeResult_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_synth_top_writeResult_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_synth_top_writeResult_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = synth_top_writeResult_U0_ap_done)) then 
                    ap_reg_procdone_synth_top_writeResult_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(synth_top_writeResult_U0_ap_idle)
    begin
        if ((ap_const_logic_1 = synth_top_writeResult_U0_ap_idle)) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;
    ap_return <= ap_const_lv32_0;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(synth_top_writeResult_U0_ap_done)
    begin
        if ((ap_const_logic_1 = synth_top_writeResult_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_top_allready <= synth_top_writeResult_U0_ap_ready;
    example_0_id_address0 <= synth_top_writeResult_U0_example_0_id_address0;
    example_0_id_ce0 <= synth_top_writeResult_U0_example_0_id_ce0;
    example_0_value_address0 <= synth_top_writeResult_U0_example_0_value_address0;
    example_0_value_ce0 <= synth_top_writeResult_U0_example_0_value_ce0;
    example_1_id_address0 <= synth_top_writeResult_U0_example_1_id_address0;
    example_1_id_ce0 <= synth_top_writeResult_U0_example_1_id_ce0;
    example_1_value_address0 <= synth_top_writeResult_U0_example_1_value_address0;
    example_1_value_ce0 <= synth_top_writeResult_U0_example_1_value_ce0;
    example_2_id_address0 <= synth_top_writeResult_U0_example_2_id_address0;
    example_2_id_ce0 <= synth_top_writeResult_U0_example_2_id_ce0;
    example_2_value_address0 <= synth_top_writeResult_U0_example_2_value_address0;
    example_2_value_ce0 <= synth_top_writeResult_U0_example_2_value_ce0;
    example_3_id_address0 <= synth_top_writeResult_U0_example_3_id_address0;
    example_3_id_ce0 <= synth_top_writeResult_U0_example_3_id_ce0;
    example_3_value_address0 <= synth_top_writeResult_U0_example_3_value_address0;
    example_3_value_ce0 <= synth_top_writeResult_U0_example_3_value_ce0;
    lambda_address0 <= synth_top_writeResult_U0_lambda_address0;
    lambda_ce0 <= synth_top_writeResult_U0_lambda_ce0;
    nonZeroFeature_address0 <= synth_top_writeResult_U0_nonZeroFeature_address0;
    nonZeroFeature_ce0 <= synth_top_writeResult_U0_nonZeroFeature_ce0;
    output_r_address0 <= synth_top_writeResult_U0_output_r_address0;
    output_r_ce0 <= synth_top_writeResult_U0_output_r_ce0;
    output_r_d0 <= synth_top_writeResult_U0_output_r_d0;
    output_r_we0 <= synth_top_writeResult_U0_output_r_we0;
    svNonZeroFeature_address0 <= synth_top_writeResult_U0_svNonZeroFeature_address0;
    svNonZeroFeature_ce0 <= synth_top_writeResult_U0_svNonZeroFeature_ce0;
    sv_0_id_address0 <= synth_top_writeResult_U0_sv_0_id_address0;
    sv_0_id_ce0 <= synth_top_writeResult_U0_sv_0_id_ce0;
    sv_0_value_address0 <= synth_top_writeResult_U0_sv_0_value_address0;
    sv_0_value_ce0 <= synth_top_writeResult_U0_sv_0_value_ce0;
    sv_1_id_address0 <= synth_top_writeResult_U0_sv_1_id_address0;
    sv_1_id_ce0 <= synth_top_writeResult_U0_sv_1_id_ce0;
    sv_1_value_address0 <= synth_top_writeResult_U0_sv_1_value_address0;
    sv_1_value_ce0 <= synth_top_writeResult_U0_sv_1_value_ce0;
    sv_2_id_address0 <= synth_top_writeResult_U0_sv_2_id_address0;
    sv_2_id_ce0 <= synth_top_writeResult_U0_sv_2_id_ce0;
    sv_2_value_address0 <= synth_top_writeResult_U0_sv_2_value_address0;
    sv_2_value_ce0 <= synth_top_writeResult_U0_sv_2_value_ce0;
    sv_3_id_address0 <= synth_top_writeResult_U0_sv_3_id_address0;
    sv_3_id_ce0 <= synth_top_writeResult_U0_sv_3_id_ce0;
    sv_3_value_address0 <= synth_top_writeResult_U0_sv_3_value_address0;
    sv_3_value_ce0 <= synth_top_writeResult_U0_sv_3_value_ce0;
    synth_top_smo_io_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    synth_top_writeResult_U0_ap_continue <= ap_const_logic_1;
    synth_top_writeResult_U0_ap_start <= ap_start;
    synth_top_writeResult_U0_example_0_id_q0 <= example_0_id_q0;
    synth_top_writeResult_U0_example_0_value_q0 <= example_0_value_q0;
    synth_top_writeResult_U0_example_1_id_q0 <= example_1_id_q0;
    synth_top_writeResult_U0_example_1_value_q0 <= example_1_value_q0;
    synth_top_writeResult_U0_example_2_id_q0 <= example_2_id_q0;
    synth_top_writeResult_U0_example_2_value_q0 <= example_2_value_q0;
    synth_top_writeResult_U0_example_3_id_q0 <= example_3_id_q0;
    synth_top_writeResult_U0_example_3_value_q0 <= example_3_value_q0;
    synth_top_writeResult_U0_kernelType <= kernelType;
    synth_top_writeResult_U0_lambda_q0 <= lambda_q0;
    synth_top_writeResult_U0_nonZeroFeature_q0 <= nonZeroFeature_q0;
    synth_top_writeResult_U0_output_r_q0 <= output_r_q0;
    synth_top_writeResult_U0_svNonZeroFeature_q0 <= svNonZeroFeature_q0;
    synth_top_writeResult_U0_sv_0_id_q0 <= sv_0_id_q0;
    synth_top_writeResult_U0_sv_0_value_q0 <= sv_0_value_q0;
    synth_top_writeResult_U0_sv_1_id_q0 <= sv_1_id_q0;
    synth_top_writeResult_U0_sv_1_value_q0 <= sv_1_value_q0;
    synth_top_writeResult_U0_sv_2_id_q0 <= sv_2_id_q0;
    synth_top_writeResult_U0_sv_2_value_q0 <= sv_2_value_q0;
    synth_top_writeResult_U0_sv_3_id_q0 <= sv_3_id_q0;
    synth_top_writeResult_U0_sv_3_value_q0 <= sv_3_value_q0;
    synth_top_writeResult_U0_weight_q0 <= weight_q0;
    weight_address0 <= synth_top_writeResult_U0_weight_address0;
    weight_ce0 <= synth_top_writeResult_U0_weight_ce0;
end behav;
