// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module synth_top_classifyPoly (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        example_0_id_address0,
        example_0_id_ce0,
        example_0_id_q0,
        example_1_id_address0,
        example_1_id_ce0,
        example_1_id_q0,
        example_2_id_address0,
        example_2_id_ce0,
        example_2_id_q0,
        example_3_id_address0,
        example_3_id_ce0,
        example_3_id_q0,
        example_0_value_address0,
        example_0_value_ce0,
        example_0_value_q0,
        example_1_value_address0,
        example_1_value_ce0,
        example_1_value_q0,
        example_2_value_address0,
        example_2_value_ce0,
        example_2_value_q0,
        example_3_value_address0,
        example_3_value_ce0,
        example_3_value_q0,
        sv_0_id_address0,
        sv_0_id_ce0,
        sv_0_id_q0,
        sv_1_id_address0,
        sv_1_id_ce0,
        sv_1_id_q0,
        sv_2_id_address0,
        sv_2_id_ce0,
        sv_2_id_q0,
        sv_3_id_address0,
        sv_3_id_ce0,
        sv_3_id_q0,
        sv_0_value_address0,
        sv_0_value_ce0,
        sv_0_value_q0,
        sv_1_value_address0,
        sv_1_value_ce0,
        sv_1_value_q0,
        sv_2_value_address0,
        sv_2_value_ce0,
        sv_2_value_q0,
        sv_3_value_address0,
        sv_3_value_ce0,
        sv_3_value_q0,
        lambda_address0,
        lambda_ce0,
        lambda_q0,
        svNonZeroFeature_address0,
        svNonZeroFeature_ce0,
        svNonZeroFeature_q0,
        nonZeroFeature_address0,
        nonZeroFeature_ce0,
        nonZeroFeature_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 82'b1;
parameter    ap_ST_st2_fsm_1 = 82'b10;
parameter    ap_ST_st3_fsm_2 = 82'b100;
parameter    ap_ST_st4_fsm_3 = 82'b1000;
parameter    ap_ST_st5_fsm_4 = 82'b10000;
parameter    ap_ST_st6_fsm_5 = 82'b100000;
parameter    ap_ST_st7_fsm_6 = 82'b1000000;
parameter    ap_ST_st8_fsm_7 = 82'b10000000;
parameter    ap_ST_st9_fsm_8 = 82'b100000000;
parameter    ap_ST_st10_fsm_9 = 82'b1000000000;
parameter    ap_ST_st11_fsm_10 = 82'b10000000000;
parameter    ap_ST_st12_fsm_11 = 82'b100000000000;
parameter    ap_ST_st13_fsm_12 = 82'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 82'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 82'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 82'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 82'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 82'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 82'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 82'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 82'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 82'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 82'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 82'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 82'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 82'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 82'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 82'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 82'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 82'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 82'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 82'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 82'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 82'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 82'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 82'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 82'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 82'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 82'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 82'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 82'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 82'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 82'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 82'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 82'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 82'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 82'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 82'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 82'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 82'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 82'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 82'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 82'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 82'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 82'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 82'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 82'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 82'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 82'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 82'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 82'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 82'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 82'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 82'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 82'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 82'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 82'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 82'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 82'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv6_33 = 6'b110011;
parameter    ap_const_lv6_26 = 6'b100110;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] example_0_id_address0;
output   example_0_id_ce0;
input  [31:0] example_0_id_q0;
output  [9:0] example_1_id_address0;
output   example_1_id_ce0;
input  [31:0] example_1_id_q0;
output  [9:0] example_2_id_address0;
output   example_2_id_ce0;
input  [31:0] example_2_id_q0;
output  [9:0] example_3_id_address0;
output   example_3_id_ce0;
input  [31:0] example_3_id_q0;
output  [9:0] example_0_value_address0;
output   example_0_value_ce0;
input  [63:0] example_0_value_q0;
output  [9:0] example_1_value_address0;
output   example_1_value_ce0;
input  [63:0] example_1_value_q0;
output  [9:0] example_2_value_address0;
output   example_2_value_ce0;
input  [63:0] example_2_value_q0;
output  [9:0] example_3_value_address0;
output   example_3_value_ce0;
input  [63:0] example_3_value_q0;
output  [8:0] sv_0_id_address0;
output   sv_0_id_ce0;
input  [31:0] sv_0_id_q0;
output  [8:0] sv_1_id_address0;
output   sv_1_id_ce0;
input  [31:0] sv_1_id_q0;
output  [8:0] sv_2_id_address0;
output   sv_2_id_ce0;
input  [31:0] sv_2_id_q0;
output  [8:0] sv_3_id_address0;
output   sv_3_id_ce0;
input  [31:0] sv_3_id_q0;
output  [8:0] sv_0_value_address0;
output   sv_0_value_ce0;
input  [63:0] sv_0_value_q0;
output  [8:0] sv_1_value_address0;
output   sv_1_value_ce0;
input  [63:0] sv_1_value_q0;
output  [8:0] sv_2_value_address0;
output   sv_2_value_ce0;
input  [63:0] sv_2_value_q0;
output  [8:0] sv_3_value_address0;
output   sv_3_value_ce0;
input  [63:0] sv_3_value_q0;
output  [5:0] lambda_address0;
output   lambda_ce0;
input  [63:0] lambda_q0;
output  [5:0] svNonZeroFeature_address0;
output   svNonZeroFeature_ce0;
input  [31:0] svNonZeroFeature_q0;
output  [5:0] nonZeroFeature_address0;
output   nonZeroFeature_ce0;
input  [31:0] nonZeroFeature_q0;
output  [5:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [63:0] output_r_d0;
input  [63:0] output_r_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg example_0_id_ce0;
reg example_1_id_ce0;
reg example_2_id_ce0;
reg example_3_id_ce0;
reg example_0_value_ce0;
reg example_1_value_ce0;
reg example_2_value_ce0;
reg example_3_value_ce0;
reg sv_0_id_ce0;
reg sv_1_id_ce0;
reg sv_2_id_ce0;
reg sv_3_id_ce0;
reg sv_0_value_ce0;
reg sv_1_value_ce0;
reg sv_2_value_ce0;
reg sv_3_value_ce0;
reg lambda_ce0;
reg svNonZeroFeature_ce0;
reg nonZeroFeature_ce0;
reg[5:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[63:0] output_r_d0;
(* fsm_encoding = "none" *) reg   [81:0] ap_CS_fsm = 82'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_100;
wire   [31:0] grp_fu_221_p1;
reg   [31:0] reg_246;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_234;
wire    grp_synth_top_dotProduct_fu_169_ap_done;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_245;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_253;
wire   [63:0] grp_fu_225_p1;
reg   [63:0] reg_253;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_263;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_270;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_278;
wire   [5:0] i_2_fu_271_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_288;
wire   [0:0] exitcond2_fu_260_p2;
reg   [5:0] nonZeroFeature_addr_reg_323;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_301;
wire   [0:0] exitcond1_fu_277_p2;
reg   [5:0] output_addr_1_reg_328;
wire   [63:0] tmp_2_fu_295_p1;
reg   [63:0] tmp_2_reg_336;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_315;
wire   [0:0] exitcond_fu_289_p2;
wire   [5:0] i_3_fu_300_p2;
reg   [31:0] svNonZeroFeature_load_reg_351;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_332;
reg   [31:0] nonZeroFeature_load_reg_356;
wire   [5:0] j_1_fu_306_p2;
reg   [5:0] j_1_reg_361;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_342;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] tmp_4_reg_366;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_351;
wire   [63:0] grp_fu_236_p2;
reg   [63:0] tmp_6_reg_371;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_360;
wire   [31:0] grp_fu_216_p2;
reg   [31:0] tmp_7_reg_376;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_369;
wire   [63:0] grp_fu_241_p2;
reg   [63:0] tmp_9_reg_381;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_bdd_378;
reg   [63:0] lambda_load_reg_391;
wire   [63:0] grp_fu_232_p2;
reg   [63:0] tmp_11_reg_396;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_390;
reg   [63:0] output_load_reg_401;
wire   [63:0] grp_fu_228_p2;
reg   [63:0] tmp_12_reg_406;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_400;
wire    grp_synth_top_dotProduct_fu_169_ap_start;
wire    grp_synth_top_dotProduct_fu_169_ap_idle;
wire    grp_synth_top_dotProduct_fu_169_ap_ready;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_0_id_address0;
wire    grp_synth_top_dotProduct_fu_169_x_0_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_x_0_id_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_1_id_address0;
wire    grp_synth_top_dotProduct_fu_169_x_1_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_x_1_id_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_2_id_address0;
wire    grp_synth_top_dotProduct_fu_169_x_2_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_x_2_id_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_3_id_address0;
wire    grp_synth_top_dotProduct_fu_169_x_3_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_x_3_id_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_0_value_address0;
wire    grp_synth_top_dotProduct_fu_169_x_0_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_x_0_value_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_1_value_address0;
wire    grp_synth_top_dotProduct_fu_169_x_1_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_x_1_value_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_2_value_address0;
wire    grp_synth_top_dotProduct_fu_169_x_2_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_x_2_value_q0;
wire   [8:0] grp_synth_top_dotProduct_fu_169_x_3_value_address0;
wire    grp_synth_top_dotProduct_fu_169_x_3_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_x_3_value_q0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_sizeX;
wire   [31:0] grp_synth_top_dotProduct_fu_169_sizeY;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_0_id_address0;
wire    grp_synth_top_dotProduct_fu_169_y_0_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_y_0_id_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_1_id_address0;
wire    grp_synth_top_dotProduct_fu_169_y_1_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_y_1_id_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_2_id_address0;
wire    grp_synth_top_dotProduct_fu_169_y_2_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_y_2_id_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_3_id_address0;
wire    grp_synth_top_dotProduct_fu_169_y_3_id_ce0;
wire   [31:0] grp_synth_top_dotProduct_fu_169_y_3_id_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_0_value_address0;
wire    grp_synth_top_dotProduct_fu_169_y_0_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_y_0_value_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_1_value_address0;
wire    grp_synth_top_dotProduct_fu_169_y_1_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_y_1_value_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_2_value_address0;
wire    grp_synth_top_dotProduct_fu_169_y_2_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_y_2_value_q0;
wire   [9:0] grp_synth_top_dotProduct_fu_169_y_3_value_address0;
wire    grp_synth_top_dotProduct_fu_169_y_3_value_ce0;
wire   [63:0] grp_synth_top_dotProduct_fu_169_y_3_value_q0;
wire   [5:0] grp_synth_top_dotProduct_fu_169_xindex;
wire   [5:0] grp_synth_top_dotProduct_fu_169_yindex;
wire   [63:0] grp_synth_top_dotProduct_fu_169_ap_return;
reg   [5:0] i_reg_133;
reg   [5:0] i_1_reg_144;
reg   [5:0] j_reg_156;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_477;
reg    grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_fu_266_p1;
wire   [63:0] tmp_s_fu_283_p1;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_490;
wire   [31:0] grp_fu_211_p0;
wire   [31:0] grp_fu_211_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_504;
wire   [31:0] grp_fu_216_p0;
wire   [31:0] grp_fu_216_p1;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_514;
reg   [63:0] grp_fu_221_p0;
reg   [31:0] grp_fu_225_p0;
wire   [63:0] grp_fu_228_p0;
wire   [63:0] grp_fu_228_p1;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_525;
wire   [63:0] grp_fu_232_p0;
wire   [63:0] grp_fu_232_p1;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_534;
wire   [63:0] grp_fu_236_p1;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_542;
wire   [63:0] grp_fu_241_p1;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_550;
wire    grp_fu_211_ce;
wire    grp_fu_216_ce;
wire    grp_fu_228_ce;
wire    grp_fu_232_ce;
wire   [63:0] grp_fu_236_p0;
wire    grp_fu_236_ce;
wire   [63:0] grp_fu_241_p0;
wire    grp_fu_241_ce;
reg   [81:0] ap_NS_fsm;


synth_top_dotProduct grp_synth_top_dotProduct_fu_169(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_synth_top_dotProduct_fu_169_ap_start ),
    .ap_done( grp_synth_top_dotProduct_fu_169_ap_done ),
    .ap_idle( grp_synth_top_dotProduct_fu_169_ap_idle ),
    .ap_ready( grp_synth_top_dotProduct_fu_169_ap_ready ),
    .x_0_id_address0( grp_synth_top_dotProduct_fu_169_x_0_id_address0 ),
    .x_0_id_ce0( grp_synth_top_dotProduct_fu_169_x_0_id_ce0 ),
    .x_0_id_q0( grp_synth_top_dotProduct_fu_169_x_0_id_q0 ),
    .x_1_id_address0( grp_synth_top_dotProduct_fu_169_x_1_id_address0 ),
    .x_1_id_ce0( grp_synth_top_dotProduct_fu_169_x_1_id_ce0 ),
    .x_1_id_q0( grp_synth_top_dotProduct_fu_169_x_1_id_q0 ),
    .x_2_id_address0( grp_synth_top_dotProduct_fu_169_x_2_id_address0 ),
    .x_2_id_ce0( grp_synth_top_dotProduct_fu_169_x_2_id_ce0 ),
    .x_2_id_q0( grp_synth_top_dotProduct_fu_169_x_2_id_q0 ),
    .x_3_id_address0( grp_synth_top_dotProduct_fu_169_x_3_id_address0 ),
    .x_3_id_ce0( grp_synth_top_dotProduct_fu_169_x_3_id_ce0 ),
    .x_3_id_q0( grp_synth_top_dotProduct_fu_169_x_3_id_q0 ),
    .x_0_value_address0( grp_synth_top_dotProduct_fu_169_x_0_value_address0 ),
    .x_0_value_ce0( grp_synth_top_dotProduct_fu_169_x_0_value_ce0 ),
    .x_0_value_q0( grp_synth_top_dotProduct_fu_169_x_0_value_q0 ),
    .x_1_value_address0( grp_synth_top_dotProduct_fu_169_x_1_value_address0 ),
    .x_1_value_ce0( grp_synth_top_dotProduct_fu_169_x_1_value_ce0 ),
    .x_1_value_q0( grp_synth_top_dotProduct_fu_169_x_1_value_q0 ),
    .x_2_value_address0( grp_synth_top_dotProduct_fu_169_x_2_value_address0 ),
    .x_2_value_ce0( grp_synth_top_dotProduct_fu_169_x_2_value_ce0 ),
    .x_2_value_q0( grp_synth_top_dotProduct_fu_169_x_2_value_q0 ),
    .x_3_value_address0( grp_synth_top_dotProduct_fu_169_x_3_value_address0 ),
    .x_3_value_ce0( grp_synth_top_dotProduct_fu_169_x_3_value_ce0 ),
    .x_3_value_q0( grp_synth_top_dotProduct_fu_169_x_3_value_q0 ),
    .sizeX( grp_synth_top_dotProduct_fu_169_sizeX ),
    .sizeY( grp_synth_top_dotProduct_fu_169_sizeY ),
    .y_0_id_address0( grp_synth_top_dotProduct_fu_169_y_0_id_address0 ),
    .y_0_id_ce0( grp_synth_top_dotProduct_fu_169_y_0_id_ce0 ),
    .y_0_id_q0( grp_synth_top_dotProduct_fu_169_y_0_id_q0 ),
    .y_1_id_address0( grp_synth_top_dotProduct_fu_169_y_1_id_address0 ),
    .y_1_id_ce0( grp_synth_top_dotProduct_fu_169_y_1_id_ce0 ),
    .y_1_id_q0( grp_synth_top_dotProduct_fu_169_y_1_id_q0 ),
    .y_2_id_address0( grp_synth_top_dotProduct_fu_169_y_2_id_address0 ),
    .y_2_id_ce0( grp_synth_top_dotProduct_fu_169_y_2_id_ce0 ),
    .y_2_id_q0( grp_synth_top_dotProduct_fu_169_y_2_id_q0 ),
    .y_3_id_address0( grp_synth_top_dotProduct_fu_169_y_3_id_address0 ),
    .y_3_id_ce0( grp_synth_top_dotProduct_fu_169_y_3_id_ce0 ),
    .y_3_id_q0( grp_synth_top_dotProduct_fu_169_y_3_id_q0 ),
    .y_0_value_address0( grp_synth_top_dotProduct_fu_169_y_0_value_address0 ),
    .y_0_value_ce0( grp_synth_top_dotProduct_fu_169_y_0_value_ce0 ),
    .y_0_value_q0( grp_synth_top_dotProduct_fu_169_y_0_value_q0 ),
    .y_1_value_address0( grp_synth_top_dotProduct_fu_169_y_1_value_address0 ),
    .y_1_value_ce0( grp_synth_top_dotProduct_fu_169_y_1_value_ce0 ),
    .y_1_value_q0( grp_synth_top_dotProduct_fu_169_y_1_value_q0 ),
    .y_2_value_address0( grp_synth_top_dotProduct_fu_169_y_2_value_address0 ),
    .y_2_value_ce0( grp_synth_top_dotProduct_fu_169_y_2_value_ce0 ),
    .y_2_value_q0( grp_synth_top_dotProduct_fu_169_y_2_value_q0 ),
    .y_3_value_address0( grp_synth_top_dotProduct_fu_169_y_3_value_address0 ),
    .y_3_value_ce0( grp_synth_top_dotProduct_fu_169_y_3_value_ce0 ),
    .y_3_value_q0( grp_synth_top_dotProduct_fu_169_y_3_value_q0 ),
    .xindex( grp_synth_top_dotProduct_fu_169_xindex ),
    .yindex( grp_synth_top_dotProduct_fu_169_yindex ),
    .ap_return( grp_synth_top_dotProduct_fu_169_ap_return )
);

synth_top_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
synth_top_fadd_32ns_32ns_32_5_full_dsp_U24(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_211_p0 ),
    .din1( grp_fu_211_p1 ),
    .ce( grp_fu_211_ce ),
    .dout( grp_fu_211_p2 )
);

synth_top_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
synth_top_fmul_32ns_32ns_32_4_max_dsp_U25(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_216_p0 ),
    .din1( grp_fu_216_p1 ),
    .ce( grp_fu_216_ce ),
    .dout( grp_fu_216_p2 )
);

synth_top_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
synth_top_fptrunc_64ns_32_1_U26(
    .din0( grp_fu_221_p0 ),
    .dout( grp_fu_221_p1 )
);

synth_top_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
synth_top_fpext_32ns_64_1_U27(
    .din0( grp_fu_225_p0 ),
    .dout( grp_fu_225_p1 )
);

synth_top_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
synth_top_dadd_64ns_64ns_64_5_full_dsp_U28(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_228_p0 ),
    .din1( grp_fu_228_p1 ),
    .ce( grp_fu_228_ce ),
    .dout( grp_fu_228_p2 )
);

synth_top_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
synth_top_dmul_64ns_64ns_64_6_max_dsp_U29(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_232_p0 ),
    .din1( grp_fu_232_p1 ),
    .ce( grp_fu_232_ce ),
    .dout( grp_fu_232_p2 )
);

synth_top_dlog_64ns_64ns_64_31_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
synth_top_dlog_64ns_64ns_64_31_full_dsp_U30(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_236_p0 ),
    .din1( grp_fu_236_p1 ),
    .ce( grp_fu_236_ce ),
    .dout( grp_fu_236_p2 )
);

synth_top_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
synth_top_dexp_64ns_64ns_64_18_full_dsp_U31(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_241_p0 ),
    .din1( grp_fu_241_p1 ),
    .ce( grp_fu_241_ce ),
    .dout( grp_fu_241_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_synth_top_dotProduct_fu_169_ap_ready)) begin
            grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_260_p2 == ap_const_lv1_0))) begin
        i_1_reg_144 <= ap_const_lv6_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond_fu_289_p2))) begin
        i_1_reg_144 <= i_3_fu_300_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_260_p2 == ap_const_lv1_0))) begin
        i_reg_133 <= i_2_fu_271_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_133 <= ap_const_lv6_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        j_reg_156 <= j_1_reg_361;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond1_fu_277_p2))) begin
        j_reg_156 <= ap_const_lv6_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        j_1_reg_361 <= j_1_fu_306_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        lambda_load_reg_391 <= lambda_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond1_fu_277_p2))) begin
        nonZeroFeature_addr_reg_323 <= tmp_s_fu_283_p1;
        output_addr_1_reg_328 <= tmp_s_fu_283_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        nonZeroFeature_load_reg_356 <= nonZeroFeature_q0;
        svNonZeroFeature_load_reg_351 <= svNonZeroFeature_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75)) begin
        output_load_reg_401 <= output_r_q0;
        tmp_11_reg_396 <= grp_fu_232_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_logic_0 == grp_synth_top_dotProduct_fu_169_ap_done)) | (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68))) begin
        reg_246 <= grp_fu_221_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69))) begin
        reg_253 <= grp_fu_225_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        tmp_12_reg_406 <= grp_fu_228_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond_fu_289_p2))) begin
        tmp_2_reg_336[5 : 0] <= tmp_2_fu_295_p1[5 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_4_reg_366 <= grp_fu_211_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        tmp_6_reg_371 <= grp_fu_236_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        tmp_7_reg_376 <= grp_fu_216_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        tmp_9_reg_381 <= grp_fu_241_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st3_fsm_2 or exitcond1_fu_277_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond1_fu_277_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond1_fu_277_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond1_fu_277_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_351)
begin
    if (ap_sig_bdd_351) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_263)
begin
    if (ap_sig_bdd_263) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_542)
begin
    if (ap_sig_bdd_542) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_100)
begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_288)
begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_360)
begin
    if (ap_sig_bdd_360) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_245)
begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_514)
begin
    if (ap_sig_bdd_514) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_48 assign process. ///
always @ (ap_sig_bdd_369)
begin
    if (ap_sig_bdd_369) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_315)
begin
    if (ap_sig_bdd_315) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_270)
begin
    if (ap_sig_bdd_270) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_50 assign process. ///
always @ (ap_sig_bdd_550)
begin
    if (ap_sig_bdd_550) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_332)
begin
    if (ap_sig_bdd_332) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st68_fsm_67 assign process. ///
always @ (ap_sig_bdd_378)
begin
    if (ap_sig_bdd_378) begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_253)
begin
    if (ap_sig_bdd_253) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_342)
begin
    if (ap_sig_bdd_342) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_278)
begin
    if (ap_sig_bdd_278) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_534)
begin
    if (ap_sig_bdd_534) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_74 assign process. ///
always @ (ap_sig_bdd_490)
begin
    if (ap_sig_bdd_490) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st76_fsm_75 assign process. ///
always @ (ap_sig_bdd_390)
begin
    if (ap_sig_bdd_390) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_525)
begin
    if (ap_sig_bdd_525) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_234)
begin
    if (ap_sig_bdd_234) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st81_fsm_80 assign process. ///
always @ (ap_sig_bdd_400)
begin
    if (ap_sig_bdd_400) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st82_fsm_81 assign process. ///
always @ (ap_sig_bdd_477)
begin
    if (ap_sig_bdd_477) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_504)
begin
    if (ap_sig_bdd_504) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// example_0_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_0_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_0_id_ce0 = grp_synth_top_dotProduct_fu_169_y_0_id_ce0;
    end else begin
        example_0_id_ce0 = ap_const_logic_0;
    end
end

/// example_0_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_0_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_0_value_ce0 = grp_synth_top_dotProduct_fu_169_y_0_value_ce0;
    end else begin
        example_0_value_ce0 = ap_const_logic_0;
    end
end

/// example_1_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_1_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_1_id_ce0 = grp_synth_top_dotProduct_fu_169_y_1_id_ce0;
    end else begin
        example_1_id_ce0 = ap_const_logic_0;
    end
end

/// example_1_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_1_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_1_value_ce0 = grp_synth_top_dotProduct_fu_169_y_1_value_ce0;
    end else begin
        example_1_value_ce0 = ap_const_logic_0;
    end
end

/// example_2_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_2_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_2_id_ce0 = grp_synth_top_dotProduct_fu_169_y_2_id_ce0;
    end else begin
        example_2_id_ce0 = ap_const_logic_0;
    end
end

/// example_2_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_2_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_2_value_ce0 = grp_synth_top_dotProduct_fu_169_y_2_value_ce0;
    end else begin
        example_2_value_ce0 = ap_const_logic_0;
    end
end

/// example_3_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_3_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_3_id_ce0 = grp_synth_top_dotProduct_fu_169_y_3_id_ce0;
    end else begin
        example_3_id_ce0 = ap_const_logic_0;
    end
end

/// example_3_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_y_3_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        example_3_value_ce0 = grp_synth_top_dotProduct_fu_169_y_3_value_ce0;
    end else begin
        example_3_value_ce0 = ap_const_logic_0;
    end
end

/// grp_fu_221_p0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st45_fsm_44 or ap_sig_cseq_ST_st69_fsm_68 or tmp_6_reg_371 or tmp_9_reg_381 or grp_synth_top_dotProduct_fu_169_ap_return)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        grp_fu_221_p0 = tmp_9_reg_381;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        grp_fu_221_p0 = tmp_6_reg_371;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_221_p0 = grp_synth_top_dotProduct_fu_169_ap_return;
    end else begin
        grp_fu_221_p0 = 'bx;
    end
end

/// grp_fu_225_p0 assign process. ///
always @ (reg_246 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st50_fsm_49 or ap_sig_cseq_ST_st70_fsm_69 or tmp_4_reg_366 or tmp_7_reg_376)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        grp_fu_225_p0 = reg_246;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_225_p0 = tmp_7_reg_376;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_225_p0 = tmp_4_reg_366;
    end else begin
        grp_fu_225_p0 = 'bx;
    end
end

/// lambda_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st69_fsm_68)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        lambda_ce0 = ap_const_logic_1;
    end else begin
        lambda_ce0 = ap_const_logic_0;
    end
end

/// nonZeroFeature_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        nonZeroFeature_ce0 = ap_const_logic_1;
    end else begin
        nonZeroFeature_ce0 = ap_const_logic_0;
    end
end

/// output_r_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or output_addr_1_reg_328 or ap_sig_cseq_ST_st82_fsm_81 or tmp_fu_266_p1 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_r_address0 = tmp_fu_266_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74))) begin
        output_r_address0 = output_addr_1_reg_328;
    end else begin
        output_r_address0 = 'bx;
    end
end

/// output_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74))) begin
        output_r_ce0 = ap_const_logic_1;
    end else begin
        output_r_ce0 = ap_const_logic_0;
    end
end

/// output_r_d0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_12_reg_406 or ap_sig_cseq_ST_st82_fsm_81)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        output_r_d0 = tmp_12_reg_406;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_r_d0 = ap_const_lv64_0;
    end else begin
        output_r_d0 = 'bx;
    end
end

/// output_r_we0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond2_fu_260_p2 or ap_sig_cseq_ST_st82_fsm_81)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_260_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81))) begin
        output_r_we0 = ap_const_logic_1;
    end else begin
        output_r_we0 = ap_const_logic_0;
    end
end

/// svNonZeroFeature_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        svNonZeroFeature_ce0 = ap_const_logic_1;
    end else begin
        svNonZeroFeature_ce0 = ap_const_logic_0;
    end
end

/// sv_0_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_0_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_0_id_ce0 = grp_synth_top_dotProduct_fu_169_x_0_id_ce0;
    end else begin
        sv_0_id_ce0 = ap_const_logic_0;
    end
end

/// sv_0_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_0_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_0_value_ce0 = grp_synth_top_dotProduct_fu_169_x_0_value_ce0;
    end else begin
        sv_0_value_ce0 = ap_const_logic_0;
    end
end

/// sv_1_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_1_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_1_id_ce0 = grp_synth_top_dotProduct_fu_169_x_1_id_ce0;
    end else begin
        sv_1_id_ce0 = ap_const_logic_0;
    end
end

/// sv_1_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_1_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_1_value_ce0 = grp_synth_top_dotProduct_fu_169_x_1_value_ce0;
    end else begin
        sv_1_value_ce0 = ap_const_logic_0;
    end
end

/// sv_2_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_2_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_2_id_ce0 = grp_synth_top_dotProduct_fu_169_x_2_id_ce0;
    end else begin
        sv_2_id_ce0 = ap_const_logic_0;
    end
end

/// sv_2_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_2_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_2_value_ce0 = grp_synth_top_dotProduct_fu_169_x_2_value_ce0;
    end else begin
        sv_2_value_ce0 = ap_const_logic_0;
    end
end

/// sv_3_id_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_3_id_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_3_id_ce0 = grp_synth_top_dotProduct_fu_169_x_3_id_ce0;
    end else begin
        sv_3_id_ce0 = ap_const_logic_0;
    end
end

/// sv_3_value_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_synth_top_dotProduct_fu_169_x_3_value_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sv_3_value_ce0 = grp_synth_top_dotProduct_fu_169_x_3_value_ce0;
    end else begin
        sv_3_value_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or grp_synth_top_dotProduct_fu_169_ap_done or exitcond2_fu_260_p2 or exitcond1_fu_277_p2 or exitcond_fu_289_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond2_fu_260_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_277_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_289_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_logic_0 == grp_synth_top_dotProduct_fu_169_ap_done)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_100 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_234 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_234 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_245 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_253 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_253 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_263 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_263 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_270 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_270 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_278 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_278 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_288 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_301 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_301 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_315 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_315 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_332 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_332 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_342 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_351 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_351 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_360 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_360 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_369 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_369 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_378 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_378 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_390 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_390 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_400 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_400 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_477 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_477 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_490 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_490 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_504 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_504 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_514 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_514 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_525 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_525 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_534 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_534 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_542 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_542 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_550 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_550 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end
assign example_0_id_address0 = grp_synth_top_dotProduct_fu_169_y_0_id_address0;
assign example_0_value_address0 = grp_synth_top_dotProduct_fu_169_y_0_value_address0;
assign example_1_id_address0 = grp_synth_top_dotProduct_fu_169_y_1_id_address0;
assign example_1_value_address0 = grp_synth_top_dotProduct_fu_169_y_1_value_address0;
assign example_2_id_address0 = grp_synth_top_dotProduct_fu_169_y_2_id_address0;
assign example_2_value_address0 = grp_synth_top_dotProduct_fu_169_y_2_value_address0;
assign example_3_id_address0 = grp_synth_top_dotProduct_fu_169_y_3_id_address0;
assign example_3_value_address0 = grp_synth_top_dotProduct_fu_169_y_3_value_address0;
assign exitcond1_fu_277_p2 = (i_1_reg_144 == ap_const_lv6_33? 1'b1: 1'b0);
assign exitcond2_fu_260_p2 = (i_reg_133 == ap_const_lv6_33? 1'b1: 1'b0);
assign exitcond_fu_289_p2 = (j_reg_156 == ap_const_lv6_26? 1'b1: 1'b0);
assign grp_fu_211_ce = ap_const_logic_1;
assign grp_fu_211_p0 = reg_246;
assign grp_fu_211_p1 = ap_const_lv32_3F800000;
assign grp_fu_216_ce = ap_const_logic_1;
assign grp_fu_216_p0 = reg_246;
assign grp_fu_216_p1 = ap_const_lv32_40000000;
assign grp_fu_228_ce = ap_const_logic_1;
assign grp_fu_228_p0 = output_load_reg_401;
assign grp_fu_228_p1 = tmp_11_reg_396;
assign grp_fu_232_ce = ap_const_logic_1;
assign grp_fu_232_p0 = lambda_load_reg_391;
assign grp_fu_232_p1 = reg_253;
assign grp_fu_236_ce = ap_const_logic_1;
assign grp_fu_236_p0 = ap_const_lv64_0;
assign grp_fu_236_p1 = reg_253;
assign grp_fu_241_ce = ap_const_logic_1;
assign grp_fu_241_p0 = ap_const_lv64_0;
assign grp_fu_241_p1 = reg_253;
assign grp_synth_top_dotProduct_fu_169_ap_start = grp_synth_top_dotProduct_fu_169_ap_start_ap_start_reg;
assign grp_synth_top_dotProduct_fu_169_sizeX = svNonZeroFeature_load_reg_351;
assign grp_synth_top_dotProduct_fu_169_sizeY = nonZeroFeature_load_reg_356;
assign grp_synth_top_dotProduct_fu_169_x_0_id_q0 = sv_0_id_q0;
assign grp_synth_top_dotProduct_fu_169_x_0_value_q0 = sv_0_value_q0;
assign grp_synth_top_dotProduct_fu_169_x_1_id_q0 = sv_1_id_q0;
assign grp_synth_top_dotProduct_fu_169_x_1_value_q0 = sv_1_value_q0;
assign grp_synth_top_dotProduct_fu_169_x_2_id_q0 = sv_2_id_q0;
assign grp_synth_top_dotProduct_fu_169_x_2_value_q0 = sv_2_value_q0;
assign grp_synth_top_dotProduct_fu_169_x_3_id_q0 = sv_3_id_q0;
assign grp_synth_top_dotProduct_fu_169_x_3_value_q0 = sv_3_value_q0;
assign grp_synth_top_dotProduct_fu_169_xindex = j_reg_156;
assign grp_synth_top_dotProduct_fu_169_y_0_id_q0 = example_0_id_q0;
assign grp_synth_top_dotProduct_fu_169_y_0_value_q0 = example_0_value_q0;
assign grp_synth_top_dotProduct_fu_169_y_1_id_q0 = example_1_id_q0;
assign grp_synth_top_dotProduct_fu_169_y_1_value_q0 = example_1_value_q0;
assign grp_synth_top_dotProduct_fu_169_y_2_id_q0 = example_2_id_q0;
assign grp_synth_top_dotProduct_fu_169_y_2_value_q0 = example_2_value_q0;
assign grp_synth_top_dotProduct_fu_169_y_3_id_q0 = example_3_id_q0;
assign grp_synth_top_dotProduct_fu_169_y_3_value_q0 = example_3_value_q0;
assign grp_synth_top_dotProduct_fu_169_yindex = i_1_reg_144;
assign i_2_fu_271_p2 = (i_reg_133 + ap_const_lv6_1);
assign i_3_fu_300_p2 = (i_1_reg_144 + ap_const_lv6_1);
assign j_1_fu_306_p2 = (j_reg_156 + ap_const_lv6_1);
assign lambda_address0 = tmp_2_reg_336;
assign nonZeroFeature_address0 = nonZeroFeature_addr_reg_323;
assign svNonZeroFeature_address0 = tmp_2_fu_295_p1;
assign sv_0_id_address0 = grp_synth_top_dotProduct_fu_169_x_0_id_address0;
assign sv_0_value_address0 = grp_synth_top_dotProduct_fu_169_x_0_value_address0;
assign sv_1_id_address0 = grp_synth_top_dotProduct_fu_169_x_1_id_address0;
assign sv_1_value_address0 = grp_synth_top_dotProduct_fu_169_x_1_value_address0;
assign sv_2_id_address0 = grp_synth_top_dotProduct_fu_169_x_2_id_address0;
assign sv_2_value_address0 = grp_synth_top_dotProduct_fu_169_x_2_value_address0;
assign sv_3_id_address0 = grp_synth_top_dotProduct_fu_169_x_3_id_address0;
assign sv_3_value_address0 = grp_synth_top_dotProduct_fu_169_x_3_value_address0;
assign tmp_2_fu_295_p1 = j_reg_156;
assign tmp_fu_266_p1 = i_reg_133;
assign tmp_s_fu_283_p1 = i_1_reg_144;
always @ (posedge ap_clk)
begin
    tmp_2_reg_336[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end



endmodule //synth_top_classifyPoly

