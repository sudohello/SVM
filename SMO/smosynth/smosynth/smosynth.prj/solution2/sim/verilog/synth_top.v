// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="synth_top,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.255500,HLS_SYN_LAT=239068,HLS_SYN_TPT=239069,HLS_SYN_MEM=0,HLS_SYN_DSP=123,HLS_SYN_FF=7849,HLS_SYN_LUT=12067}" *)

module synth_top (
        example_0_id_address0,
        example_0_id_ce0,
        example_0_id_d0,
        example_0_id_q0,
        example_0_id_we0,
        example_0_id_address1,
        example_0_id_ce1,
        example_0_id_d1,
        example_0_id_q1,
        example_0_id_we1,
        example_1_id_address0,
        example_1_id_ce0,
        example_1_id_d0,
        example_1_id_q0,
        example_1_id_we0,
        example_1_id_address1,
        example_1_id_ce1,
        example_1_id_d1,
        example_1_id_q1,
        example_1_id_we1,
        example_2_id_address0,
        example_2_id_ce0,
        example_2_id_d0,
        example_2_id_q0,
        example_2_id_we0,
        example_2_id_address1,
        example_2_id_ce1,
        example_2_id_d1,
        example_2_id_q1,
        example_2_id_we1,
        example_3_id_address0,
        example_3_id_ce0,
        example_3_id_d0,
        example_3_id_q0,
        example_3_id_we0,
        example_3_id_address1,
        example_3_id_ce1,
        example_3_id_d1,
        example_3_id_q1,
        example_3_id_we1,
        example_0_value_address0,
        example_0_value_ce0,
        example_0_value_d0,
        example_0_value_q0,
        example_0_value_we0,
        example_0_value_address1,
        example_0_value_ce1,
        example_0_value_d1,
        example_0_value_q1,
        example_0_value_we1,
        example_1_value_address0,
        example_1_value_ce0,
        example_1_value_d0,
        example_1_value_q0,
        example_1_value_we0,
        example_1_value_address1,
        example_1_value_ce1,
        example_1_value_d1,
        example_1_value_q1,
        example_1_value_we1,
        example_2_value_address0,
        example_2_value_ce0,
        example_2_value_d0,
        example_2_value_q0,
        example_2_value_we0,
        example_2_value_address1,
        example_2_value_ce1,
        example_2_value_d1,
        example_2_value_q1,
        example_2_value_we1,
        example_3_value_address0,
        example_3_value_ce0,
        example_3_value_d0,
        example_3_value_q0,
        example_3_value_we0,
        example_3_value_address1,
        example_3_value_ce1,
        example_3_value_d1,
        example_3_value_q1,
        example_3_value_we1,
        sv_0_id_address0,
        sv_0_id_ce0,
        sv_0_id_d0,
        sv_0_id_q0,
        sv_0_id_we0,
        sv_0_id_address1,
        sv_0_id_ce1,
        sv_0_id_d1,
        sv_0_id_q1,
        sv_0_id_we1,
        sv_1_id_address0,
        sv_1_id_ce0,
        sv_1_id_d0,
        sv_1_id_q0,
        sv_1_id_we0,
        sv_1_id_address1,
        sv_1_id_ce1,
        sv_1_id_d1,
        sv_1_id_q1,
        sv_1_id_we1,
        sv_2_id_address0,
        sv_2_id_ce0,
        sv_2_id_d0,
        sv_2_id_q0,
        sv_2_id_we0,
        sv_2_id_address1,
        sv_2_id_ce1,
        sv_2_id_d1,
        sv_2_id_q1,
        sv_2_id_we1,
        sv_3_id_address0,
        sv_3_id_ce0,
        sv_3_id_d0,
        sv_3_id_q0,
        sv_3_id_we0,
        sv_3_id_address1,
        sv_3_id_ce1,
        sv_3_id_d1,
        sv_3_id_q1,
        sv_3_id_we1,
        sv_0_value_address0,
        sv_0_value_ce0,
        sv_0_value_d0,
        sv_0_value_q0,
        sv_0_value_we0,
        sv_0_value_address1,
        sv_0_value_ce1,
        sv_0_value_d1,
        sv_0_value_q1,
        sv_0_value_we1,
        sv_1_value_address0,
        sv_1_value_ce0,
        sv_1_value_d0,
        sv_1_value_q0,
        sv_1_value_we0,
        sv_1_value_address1,
        sv_1_value_ce1,
        sv_1_value_d1,
        sv_1_value_q1,
        sv_1_value_we1,
        sv_2_value_address0,
        sv_2_value_ce0,
        sv_2_value_d0,
        sv_2_value_q0,
        sv_2_value_we0,
        sv_2_value_address1,
        sv_2_value_ce1,
        sv_2_value_d1,
        sv_2_value_q1,
        sv_2_value_we1,
        sv_3_value_address0,
        sv_3_value_ce0,
        sv_3_value_d0,
        sv_3_value_q0,
        sv_3_value_we0,
        sv_3_value_address1,
        sv_3_value_ce1,
        sv_3_value_d1,
        sv_3_value_q1,
        sv_3_value_we1,
        lambda_address0,
        lambda_ce0,
        lambda_d0,
        lambda_q0,
        lambda_we0,
        lambda_address1,
        lambda_ce1,
        lambda_d1,
        lambda_q1,
        lambda_we1,
        svNonZeroFeature_address0,
        svNonZeroFeature_ce0,
        svNonZeroFeature_d0,
        svNonZeroFeature_q0,
        svNonZeroFeature_we0,
        svNonZeroFeature_address1,
        svNonZeroFeature_ce1,
        svNonZeroFeature_d1,
        svNonZeroFeature_q1,
        svNonZeroFeature_we1,
        nonZeroFeature_address0,
        nonZeroFeature_ce0,
        nonZeroFeature_d0,
        nonZeroFeature_q0,
        nonZeroFeature_we0,
        nonZeroFeature_address1,
        nonZeroFeature_ce1,
        nonZeroFeature_d1,
        nonZeroFeature_q1,
        nonZeroFeature_we1,
        weight_address0,
        weight_ce0,
        weight_d0,
        weight_q0,
        weight_we0,
        weight_address1,
        weight_ce1,
        weight_d1,
        weight_q1,
        weight_we1,
        output_r_address0,
        output_r_ce0,
        output_r_d0,
        output_r_q0,
        output_r_we0,
        output_r_address1,
        output_r_ce1,
        output_r_d1,
        output_r_q1,
        output_r_we1,
        kernelType,
        ap_clk,
        ap_rst,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready,
        ap_return
);

parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;

output  [9:0] example_0_id_address0;
output   example_0_id_ce0;
output  [31:0] example_0_id_d0;
input  [31:0] example_0_id_q0;
output   example_0_id_we0;
output  [9:0] example_0_id_address1;
output   example_0_id_ce1;
output  [31:0] example_0_id_d1;
input  [31:0] example_0_id_q1;
output   example_0_id_we1;
output  [9:0] example_1_id_address0;
output   example_1_id_ce0;
output  [31:0] example_1_id_d0;
input  [31:0] example_1_id_q0;
output   example_1_id_we0;
output  [9:0] example_1_id_address1;
output   example_1_id_ce1;
output  [31:0] example_1_id_d1;
input  [31:0] example_1_id_q1;
output   example_1_id_we1;
output  [9:0] example_2_id_address0;
output   example_2_id_ce0;
output  [31:0] example_2_id_d0;
input  [31:0] example_2_id_q0;
output   example_2_id_we0;
output  [9:0] example_2_id_address1;
output   example_2_id_ce1;
output  [31:0] example_2_id_d1;
input  [31:0] example_2_id_q1;
output   example_2_id_we1;
output  [9:0] example_3_id_address0;
output   example_3_id_ce0;
output  [31:0] example_3_id_d0;
input  [31:0] example_3_id_q0;
output   example_3_id_we0;
output  [9:0] example_3_id_address1;
output   example_3_id_ce1;
output  [31:0] example_3_id_d1;
input  [31:0] example_3_id_q1;
output   example_3_id_we1;
output  [9:0] example_0_value_address0;
output   example_0_value_ce0;
output  [63:0] example_0_value_d0;
input  [63:0] example_0_value_q0;
output   example_0_value_we0;
output  [9:0] example_0_value_address1;
output   example_0_value_ce1;
output  [63:0] example_0_value_d1;
input  [63:0] example_0_value_q1;
output   example_0_value_we1;
output  [9:0] example_1_value_address0;
output   example_1_value_ce0;
output  [63:0] example_1_value_d0;
input  [63:0] example_1_value_q0;
output   example_1_value_we0;
output  [9:0] example_1_value_address1;
output   example_1_value_ce1;
output  [63:0] example_1_value_d1;
input  [63:0] example_1_value_q1;
output   example_1_value_we1;
output  [9:0] example_2_value_address0;
output   example_2_value_ce0;
output  [63:0] example_2_value_d0;
input  [63:0] example_2_value_q0;
output   example_2_value_we0;
output  [9:0] example_2_value_address1;
output   example_2_value_ce1;
output  [63:0] example_2_value_d1;
input  [63:0] example_2_value_q1;
output   example_2_value_we1;
output  [9:0] example_3_value_address0;
output   example_3_value_ce0;
output  [63:0] example_3_value_d0;
input  [63:0] example_3_value_q0;
output   example_3_value_we0;
output  [9:0] example_3_value_address1;
output   example_3_value_ce1;
output  [63:0] example_3_value_d1;
input  [63:0] example_3_value_q1;
output   example_3_value_we1;
output  [9:0] sv_0_id_address0;
output   sv_0_id_ce0;
output  [31:0] sv_0_id_d0;
input  [31:0] sv_0_id_q0;
output   sv_0_id_we0;
output  [9:0] sv_0_id_address1;
output   sv_0_id_ce1;
output  [31:0] sv_0_id_d1;
input  [31:0] sv_0_id_q1;
output   sv_0_id_we1;
output  [9:0] sv_1_id_address0;
output   sv_1_id_ce0;
output  [31:0] sv_1_id_d0;
input  [31:0] sv_1_id_q0;
output   sv_1_id_we0;
output  [9:0] sv_1_id_address1;
output   sv_1_id_ce1;
output  [31:0] sv_1_id_d1;
input  [31:0] sv_1_id_q1;
output   sv_1_id_we1;
output  [9:0] sv_2_id_address0;
output   sv_2_id_ce0;
output  [31:0] sv_2_id_d0;
input  [31:0] sv_2_id_q0;
output   sv_2_id_we0;
output  [9:0] sv_2_id_address1;
output   sv_2_id_ce1;
output  [31:0] sv_2_id_d1;
input  [31:0] sv_2_id_q1;
output   sv_2_id_we1;
output  [9:0] sv_3_id_address0;
output   sv_3_id_ce0;
output  [31:0] sv_3_id_d0;
input  [31:0] sv_3_id_q0;
output   sv_3_id_we0;
output  [9:0] sv_3_id_address1;
output   sv_3_id_ce1;
output  [31:0] sv_3_id_d1;
input  [31:0] sv_3_id_q1;
output   sv_3_id_we1;
output  [9:0] sv_0_value_address0;
output   sv_0_value_ce0;
output  [63:0] sv_0_value_d0;
input  [63:0] sv_0_value_q0;
output   sv_0_value_we0;
output  [9:0] sv_0_value_address1;
output   sv_0_value_ce1;
output  [63:0] sv_0_value_d1;
input  [63:0] sv_0_value_q1;
output   sv_0_value_we1;
output  [9:0] sv_1_value_address0;
output   sv_1_value_ce0;
output  [63:0] sv_1_value_d0;
input  [63:0] sv_1_value_q0;
output   sv_1_value_we0;
output  [9:0] sv_1_value_address1;
output   sv_1_value_ce1;
output  [63:0] sv_1_value_d1;
input  [63:0] sv_1_value_q1;
output   sv_1_value_we1;
output  [9:0] sv_2_value_address0;
output   sv_2_value_ce0;
output  [63:0] sv_2_value_d0;
input  [63:0] sv_2_value_q0;
output   sv_2_value_we0;
output  [9:0] sv_2_value_address1;
output   sv_2_value_ce1;
output  [63:0] sv_2_value_d1;
input  [63:0] sv_2_value_q1;
output   sv_2_value_we1;
output  [9:0] sv_3_value_address0;
output   sv_3_value_ce0;
output  [63:0] sv_3_value_d0;
input  [63:0] sv_3_value_q0;
output   sv_3_value_we0;
output  [9:0] sv_3_value_address1;
output   sv_3_value_ce1;
output  [63:0] sv_3_value_d1;
input  [63:0] sv_3_value_q1;
output   sv_3_value_we1;
output  [5:0] lambda_address0;
output   lambda_ce0;
output  [63:0] lambda_d0;
input  [63:0] lambda_q0;
output   lambda_we0;
output  [5:0] lambda_address1;
output   lambda_ce1;
output  [63:0] lambda_d1;
input  [63:0] lambda_q1;
output   lambda_we1;
output  [5:0] svNonZeroFeature_address0;
output   svNonZeroFeature_ce0;
output  [31:0] svNonZeroFeature_d0;
input  [31:0] svNonZeroFeature_q0;
output   svNonZeroFeature_we0;
output  [5:0] svNonZeroFeature_address1;
output   svNonZeroFeature_ce1;
output  [31:0] svNonZeroFeature_d1;
input  [31:0] svNonZeroFeature_q1;
output   svNonZeroFeature_we1;
output  [5:0] nonZeroFeature_address0;
output   nonZeroFeature_ce0;
output  [31:0] nonZeroFeature_d0;
input  [31:0] nonZeroFeature_q0;
output   nonZeroFeature_we0;
output  [5:0] nonZeroFeature_address1;
output   nonZeroFeature_ce1;
output  [31:0] nonZeroFeature_d1;
input  [31:0] nonZeroFeature_q1;
output   nonZeroFeature_we1;
output  [5:0] weight_address0;
output   weight_ce0;
output  [63:0] weight_d0;
input  [63:0] weight_q0;
output   weight_we0;
output  [5:0] weight_address1;
output   weight_ce1;
output  [63:0] weight_d1;
input  [63:0] weight_q1;
output   weight_we1;
output  [5:0] output_r_address0;
output   output_r_ce0;
output  [63:0] output_r_d0;
input  [63:0] output_r_q0;
output   output_r_we0;
output  [5:0] output_r_address1;
output   output_r_ce1;
output  [63:0] output_r_d1;
input  [63:0] output_r_q1;
output   output_r_we1;
input  [31:0] kernelType;
input   ap_clk;
input   ap_rst;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;
output  [31:0] ap_return;

reg ap_idle;
wire    synth_top_writeResult_U0_ap_start;
wire    synth_top_writeResult_U0_ap_done;
wire    synth_top_writeResult_U0_ap_continue;
wire    synth_top_writeResult_U0_ap_idle;
wire    synth_top_writeResult_U0_ap_ready;
wire   [9:0] synth_top_writeResult_U0_example_0_id_address0;
wire    synth_top_writeResult_U0_example_0_id_ce0;
wire   [31:0] synth_top_writeResult_U0_example_0_id_q0;
wire   [9:0] synth_top_writeResult_U0_example_1_id_address0;
wire    synth_top_writeResult_U0_example_1_id_ce0;
wire   [31:0] synth_top_writeResult_U0_example_1_id_q0;
wire   [9:0] synth_top_writeResult_U0_example_2_id_address0;
wire    synth_top_writeResult_U0_example_2_id_ce0;
wire   [31:0] synth_top_writeResult_U0_example_2_id_q0;
wire   [9:0] synth_top_writeResult_U0_example_3_id_address0;
wire    synth_top_writeResult_U0_example_3_id_ce0;
wire   [31:0] synth_top_writeResult_U0_example_3_id_q0;
wire   [9:0] synth_top_writeResult_U0_example_0_value_address0;
wire    synth_top_writeResult_U0_example_0_value_ce0;
wire   [63:0] synth_top_writeResult_U0_example_0_value_q0;
wire   [9:0] synth_top_writeResult_U0_example_1_value_address0;
wire    synth_top_writeResult_U0_example_1_value_ce0;
wire   [63:0] synth_top_writeResult_U0_example_1_value_q0;
wire   [9:0] synth_top_writeResult_U0_example_2_value_address0;
wire    synth_top_writeResult_U0_example_2_value_ce0;
wire   [63:0] synth_top_writeResult_U0_example_2_value_q0;
wire   [9:0] synth_top_writeResult_U0_example_3_value_address0;
wire    synth_top_writeResult_U0_example_3_value_ce0;
wire   [63:0] synth_top_writeResult_U0_example_3_value_q0;
wire   [9:0] synth_top_writeResult_U0_sv_0_id_address0;
wire    synth_top_writeResult_U0_sv_0_id_ce0;
wire   [31:0] synth_top_writeResult_U0_sv_0_id_q0;
wire   [9:0] synth_top_writeResult_U0_sv_1_id_address0;
wire    synth_top_writeResult_U0_sv_1_id_ce0;
wire   [31:0] synth_top_writeResult_U0_sv_1_id_q0;
wire   [9:0] synth_top_writeResult_U0_sv_2_id_address0;
wire    synth_top_writeResult_U0_sv_2_id_ce0;
wire   [31:0] synth_top_writeResult_U0_sv_2_id_q0;
wire   [9:0] synth_top_writeResult_U0_sv_3_id_address0;
wire    synth_top_writeResult_U0_sv_3_id_ce0;
wire   [31:0] synth_top_writeResult_U0_sv_3_id_q0;
wire   [9:0] synth_top_writeResult_U0_sv_0_value_address0;
wire    synth_top_writeResult_U0_sv_0_value_ce0;
wire   [63:0] synth_top_writeResult_U0_sv_0_value_q0;
wire   [9:0] synth_top_writeResult_U0_sv_1_value_address0;
wire    synth_top_writeResult_U0_sv_1_value_ce0;
wire   [63:0] synth_top_writeResult_U0_sv_1_value_q0;
wire   [9:0] synth_top_writeResult_U0_sv_2_value_address0;
wire    synth_top_writeResult_U0_sv_2_value_ce0;
wire   [63:0] synth_top_writeResult_U0_sv_2_value_q0;
wire   [9:0] synth_top_writeResult_U0_sv_3_value_address0;
wire    synth_top_writeResult_U0_sv_3_value_ce0;
wire   [63:0] synth_top_writeResult_U0_sv_3_value_q0;
wire   [5:0] synth_top_writeResult_U0_lambda_address0;
wire    synth_top_writeResult_U0_lambda_ce0;
wire   [63:0] synth_top_writeResult_U0_lambda_q0;
wire   [5:0] synth_top_writeResult_U0_svNonZeroFeature_address0;
wire    synth_top_writeResult_U0_svNonZeroFeature_ce0;
wire   [31:0] synth_top_writeResult_U0_svNonZeroFeature_q0;
wire   [5:0] synth_top_writeResult_U0_nonZeroFeature_address0;
wire    synth_top_writeResult_U0_nonZeroFeature_ce0;
wire   [31:0] synth_top_writeResult_U0_nonZeroFeature_q0;
wire   [5:0] synth_top_writeResult_U0_weight_address0;
wire    synth_top_writeResult_U0_weight_ce0;
wire   [63:0] synth_top_writeResult_U0_weight_q0;
wire   [5:0] synth_top_writeResult_U0_output_r_address0;
wire    synth_top_writeResult_U0_output_r_ce0;
wire    synth_top_writeResult_U0_output_r_we0;
wire   [63:0] synth_top_writeResult_U0_output_r_d0;
wire   [63:0] synth_top_writeResult_U0_output_r_q0;
wire   [31:0] synth_top_writeResult_U0_kernelType;
reg    ap_reg_procdone_synth_top_writeResult_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_CS;
wire    ap_sig_top_allready;
wire    ap_sig_hs_continue;


synth_top_writeResult synth_top_writeResult_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( synth_top_writeResult_U0_ap_start ),
    .ap_done( synth_top_writeResult_U0_ap_done ),
    .ap_continue( synth_top_writeResult_U0_ap_continue ),
    .ap_idle( synth_top_writeResult_U0_ap_idle ),
    .ap_ready( synth_top_writeResult_U0_ap_ready ),
    .example_0_id_address0( synth_top_writeResult_U0_example_0_id_address0 ),
    .example_0_id_ce0( synth_top_writeResult_U0_example_0_id_ce0 ),
    .example_0_id_q0( synth_top_writeResult_U0_example_0_id_q0 ),
    .example_1_id_address0( synth_top_writeResult_U0_example_1_id_address0 ),
    .example_1_id_ce0( synth_top_writeResult_U0_example_1_id_ce0 ),
    .example_1_id_q0( synth_top_writeResult_U0_example_1_id_q0 ),
    .example_2_id_address0( synth_top_writeResult_U0_example_2_id_address0 ),
    .example_2_id_ce0( synth_top_writeResult_U0_example_2_id_ce0 ),
    .example_2_id_q0( synth_top_writeResult_U0_example_2_id_q0 ),
    .example_3_id_address0( synth_top_writeResult_U0_example_3_id_address0 ),
    .example_3_id_ce0( synth_top_writeResult_U0_example_3_id_ce0 ),
    .example_3_id_q0( synth_top_writeResult_U0_example_3_id_q0 ),
    .example_0_value_address0( synth_top_writeResult_U0_example_0_value_address0 ),
    .example_0_value_ce0( synth_top_writeResult_U0_example_0_value_ce0 ),
    .example_0_value_q0( synth_top_writeResult_U0_example_0_value_q0 ),
    .example_1_value_address0( synth_top_writeResult_U0_example_1_value_address0 ),
    .example_1_value_ce0( synth_top_writeResult_U0_example_1_value_ce0 ),
    .example_1_value_q0( synth_top_writeResult_U0_example_1_value_q0 ),
    .example_2_value_address0( synth_top_writeResult_U0_example_2_value_address0 ),
    .example_2_value_ce0( synth_top_writeResult_U0_example_2_value_ce0 ),
    .example_2_value_q0( synth_top_writeResult_U0_example_2_value_q0 ),
    .example_3_value_address0( synth_top_writeResult_U0_example_3_value_address0 ),
    .example_3_value_ce0( synth_top_writeResult_U0_example_3_value_ce0 ),
    .example_3_value_q0( synth_top_writeResult_U0_example_3_value_q0 ),
    .sv_0_id_address0( synth_top_writeResult_U0_sv_0_id_address0 ),
    .sv_0_id_ce0( synth_top_writeResult_U0_sv_0_id_ce0 ),
    .sv_0_id_q0( synth_top_writeResult_U0_sv_0_id_q0 ),
    .sv_1_id_address0( synth_top_writeResult_U0_sv_1_id_address0 ),
    .sv_1_id_ce0( synth_top_writeResult_U0_sv_1_id_ce0 ),
    .sv_1_id_q0( synth_top_writeResult_U0_sv_1_id_q0 ),
    .sv_2_id_address0( synth_top_writeResult_U0_sv_2_id_address0 ),
    .sv_2_id_ce0( synth_top_writeResult_U0_sv_2_id_ce0 ),
    .sv_2_id_q0( synth_top_writeResult_U0_sv_2_id_q0 ),
    .sv_3_id_address0( synth_top_writeResult_U0_sv_3_id_address0 ),
    .sv_3_id_ce0( synth_top_writeResult_U0_sv_3_id_ce0 ),
    .sv_3_id_q0( synth_top_writeResult_U0_sv_3_id_q0 ),
    .sv_0_value_address0( synth_top_writeResult_U0_sv_0_value_address0 ),
    .sv_0_value_ce0( synth_top_writeResult_U0_sv_0_value_ce0 ),
    .sv_0_value_q0( synth_top_writeResult_U0_sv_0_value_q0 ),
    .sv_1_value_address0( synth_top_writeResult_U0_sv_1_value_address0 ),
    .sv_1_value_ce0( synth_top_writeResult_U0_sv_1_value_ce0 ),
    .sv_1_value_q0( synth_top_writeResult_U0_sv_1_value_q0 ),
    .sv_2_value_address0( synth_top_writeResult_U0_sv_2_value_address0 ),
    .sv_2_value_ce0( synth_top_writeResult_U0_sv_2_value_ce0 ),
    .sv_2_value_q0( synth_top_writeResult_U0_sv_2_value_q0 ),
    .sv_3_value_address0( synth_top_writeResult_U0_sv_3_value_address0 ),
    .sv_3_value_ce0( synth_top_writeResult_U0_sv_3_value_ce0 ),
    .sv_3_value_q0( synth_top_writeResult_U0_sv_3_value_q0 ),
    .lambda_address0( synth_top_writeResult_U0_lambda_address0 ),
    .lambda_ce0( synth_top_writeResult_U0_lambda_ce0 ),
    .lambda_q0( synth_top_writeResult_U0_lambda_q0 ),
    .svNonZeroFeature_address0( synth_top_writeResult_U0_svNonZeroFeature_address0 ),
    .svNonZeroFeature_ce0( synth_top_writeResult_U0_svNonZeroFeature_ce0 ),
    .svNonZeroFeature_q0( synth_top_writeResult_U0_svNonZeroFeature_q0 ),
    .nonZeroFeature_address0( synth_top_writeResult_U0_nonZeroFeature_address0 ),
    .nonZeroFeature_ce0( synth_top_writeResult_U0_nonZeroFeature_ce0 ),
    .nonZeroFeature_q0( synth_top_writeResult_U0_nonZeroFeature_q0 ),
    .weight_address0( synth_top_writeResult_U0_weight_address0 ),
    .weight_ce0( synth_top_writeResult_U0_weight_ce0 ),
    .weight_q0( synth_top_writeResult_U0_weight_q0 ),
    .output_r_address0( synth_top_writeResult_U0_output_r_address0 ),
    .output_r_ce0( synth_top_writeResult_U0_output_r_ce0 ),
    .output_r_we0( synth_top_writeResult_U0_output_r_we0 ),
    .output_r_d0( synth_top_writeResult_U0_output_r_d0 ),
    .output_r_q0( synth_top_writeResult_U0_output_r_q0 ),
    .kernelType( synth_top_writeResult_U0_kernelType )
);



/// ap_reg_procdone_synth_top_writeResult_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_synth_top_writeResult_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_synth_top_writeResult_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_synth_top_writeResult_U0 <= ap_const_logic_0;
        end else if ((synth_top_writeResult_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_synth_top_writeResult_U0 <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_idle assign process. ///
always @ (synth_top_writeResult_U0_ap_idle)
begin
    if ((synth_top_writeResult_U0_ap_idle == ap_const_logic_1)) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (synth_top_writeResult_U0_ap_done)
begin
    if ((synth_top_writeResult_U0_ap_done == ap_const_logic_1)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;
assign ap_return = ap_const_lv32_0;
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = synth_top_writeResult_U0_ap_ready;
assign example_0_id_address0 = synth_top_writeResult_U0_example_0_id_address0;
assign example_0_id_address1 = ap_const_lv10_0;
assign example_0_id_ce0 = synth_top_writeResult_U0_example_0_id_ce0;
assign example_0_id_ce1 = ap_const_logic_0;
assign example_0_id_d0 = ap_const_lv32_0;
assign example_0_id_d1 = ap_const_lv32_0;
assign example_0_id_we0 = ap_const_logic_0;
assign example_0_id_we1 = ap_const_logic_0;
assign example_0_value_address0 = synth_top_writeResult_U0_example_0_value_address0;
assign example_0_value_address1 = ap_const_lv10_0;
assign example_0_value_ce0 = synth_top_writeResult_U0_example_0_value_ce0;
assign example_0_value_ce1 = ap_const_logic_0;
assign example_0_value_d0 = ap_const_lv64_0;
assign example_0_value_d1 = ap_const_lv64_0;
assign example_0_value_we0 = ap_const_logic_0;
assign example_0_value_we1 = ap_const_logic_0;
assign example_1_id_address0 = synth_top_writeResult_U0_example_1_id_address0;
assign example_1_id_address1 = ap_const_lv10_0;
assign example_1_id_ce0 = synth_top_writeResult_U0_example_1_id_ce0;
assign example_1_id_ce1 = ap_const_logic_0;
assign example_1_id_d0 = ap_const_lv32_0;
assign example_1_id_d1 = ap_const_lv32_0;
assign example_1_id_we0 = ap_const_logic_0;
assign example_1_id_we1 = ap_const_logic_0;
assign example_1_value_address0 = synth_top_writeResult_U0_example_1_value_address0;
assign example_1_value_address1 = ap_const_lv10_0;
assign example_1_value_ce0 = synth_top_writeResult_U0_example_1_value_ce0;
assign example_1_value_ce1 = ap_const_logic_0;
assign example_1_value_d0 = ap_const_lv64_0;
assign example_1_value_d1 = ap_const_lv64_0;
assign example_1_value_we0 = ap_const_logic_0;
assign example_1_value_we1 = ap_const_logic_0;
assign example_2_id_address0 = synth_top_writeResult_U0_example_2_id_address0;
assign example_2_id_address1 = ap_const_lv10_0;
assign example_2_id_ce0 = synth_top_writeResult_U0_example_2_id_ce0;
assign example_2_id_ce1 = ap_const_logic_0;
assign example_2_id_d0 = ap_const_lv32_0;
assign example_2_id_d1 = ap_const_lv32_0;
assign example_2_id_we0 = ap_const_logic_0;
assign example_2_id_we1 = ap_const_logic_0;
assign example_2_value_address0 = synth_top_writeResult_U0_example_2_value_address0;
assign example_2_value_address1 = ap_const_lv10_0;
assign example_2_value_ce0 = synth_top_writeResult_U0_example_2_value_ce0;
assign example_2_value_ce1 = ap_const_logic_0;
assign example_2_value_d0 = ap_const_lv64_0;
assign example_2_value_d1 = ap_const_lv64_0;
assign example_2_value_we0 = ap_const_logic_0;
assign example_2_value_we1 = ap_const_logic_0;
assign example_3_id_address0 = synth_top_writeResult_U0_example_3_id_address0;
assign example_3_id_address1 = ap_const_lv10_0;
assign example_3_id_ce0 = synth_top_writeResult_U0_example_3_id_ce0;
assign example_3_id_ce1 = ap_const_logic_0;
assign example_3_id_d0 = ap_const_lv32_0;
assign example_3_id_d1 = ap_const_lv32_0;
assign example_3_id_we0 = ap_const_logic_0;
assign example_3_id_we1 = ap_const_logic_0;
assign example_3_value_address0 = synth_top_writeResult_U0_example_3_value_address0;
assign example_3_value_address1 = ap_const_lv10_0;
assign example_3_value_ce0 = synth_top_writeResult_U0_example_3_value_ce0;
assign example_3_value_ce1 = ap_const_logic_0;
assign example_3_value_d0 = ap_const_lv64_0;
assign example_3_value_d1 = ap_const_lv64_0;
assign example_3_value_we0 = ap_const_logic_0;
assign example_3_value_we1 = ap_const_logic_0;
assign lambda_address0 = synth_top_writeResult_U0_lambda_address0;
assign lambda_address1 = ap_const_lv6_0;
assign lambda_ce0 = synth_top_writeResult_U0_lambda_ce0;
assign lambda_ce1 = ap_const_logic_0;
assign lambda_d0 = ap_const_lv64_0;
assign lambda_d1 = ap_const_lv64_0;
assign lambda_we0 = ap_const_logic_0;
assign lambda_we1 = ap_const_logic_0;
assign nonZeroFeature_address0 = synth_top_writeResult_U0_nonZeroFeature_address0;
assign nonZeroFeature_address1 = ap_const_lv6_0;
assign nonZeroFeature_ce0 = synth_top_writeResult_U0_nonZeroFeature_ce0;
assign nonZeroFeature_ce1 = ap_const_logic_0;
assign nonZeroFeature_d0 = ap_const_lv32_0;
assign nonZeroFeature_d1 = ap_const_lv32_0;
assign nonZeroFeature_we0 = ap_const_logic_0;
assign nonZeroFeature_we1 = ap_const_logic_0;
assign output_r_address0 = synth_top_writeResult_U0_output_r_address0;
assign output_r_address1 = ap_const_lv6_0;
assign output_r_ce0 = synth_top_writeResult_U0_output_r_ce0;
assign output_r_ce1 = ap_const_logic_0;
assign output_r_d0 = synth_top_writeResult_U0_output_r_d0;
assign output_r_d1 = ap_const_lv64_0;
assign output_r_we0 = synth_top_writeResult_U0_output_r_we0;
assign output_r_we1 = ap_const_logic_0;
assign svNonZeroFeature_address0 = synth_top_writeResult_U0_svNonZeroFeature_address0;
assign svNonZeroFeature_address1 = ap_const_lv6_0;
assign svNonZeroFeature_ce0 = synth_top_writeResult_U0_svNonZeroFeature_ce0;
assign svNonZeroFeature_ce1 = ap_const_logic_0;
assign svNonZeroFeature_d0 = ap_const_lv32_0;
assign svNonZeroFeature_d1 = ap_const_lv32_0;
assign svNonZeroFeature_we0 = ap_const_logic_0;
assign svNonZeroFeature_we1 = ap_const_logic_0;
assign sv_0_id_address0 = synth_top_writeResult_U0_sv_0_id_address0;
assign sv_0_id_address1 = ap_const_lv10_0;
assign sv_0_id_ce0 = synth_top_writeResult_U0_sv_0_id_ce0;
assign sv_0_id_ce1 = ap_const_logic_0;
assign sv_0_id_d0 = ap_const_lv32_0;
assign sv_0_id_d1 = ap_const_lv32_0;
assign sv_0_id_we0 = ap_const_logic_0;
assign sv_0_id_we1 = ap_const_logic_0;
assign sv_0_value_address0 = synth_top_writeResult_U0_sv_0_value_address0;
assign sv_0_value_address1 = ap_const_lv10_0;
assign sv_0_value_ce0 = synth_top_writeResult_U0_sv_0_value_ce0;
assign sv_0_value_ce1 = ap_const_logic_0;
assign sv_0_value_d0 = ap_const_lv64_0;
assign sv_0_value_d1 = ap_const_lv64_0;
assign sv_0_value_we0 = ap_const_logic_0;
assign sv_0_value_we1 = ap_const_logic_0;
assign sv_1_id_address0 = synth_top_writeResult_U0_sv_1_id_address0;
assign sv_1_id_address1 = ap_const_lv10_0;
assign sv_1_id_ce0 = synth_top_writeResult_U0_sv_1_id_ce0;
assign sv_1_id_ce1 = ap_const_logic_0;
assign sv_1_id_d0 = ap_const_lv32_0;
assign sv_1_id_d1 = ap_const_lv32_0;
assign sv_1_id_we0 = ap_const_logic_0;
assign sv_1_id_we1 = ap_const_logic_0;
assign sv_1_value_address0 = synth_top_writeResult_U0_sv_1_value_address0;
assign sv_1_value_address1 = ap_const_lv10_0;
assign sv_1_value_ce0 = synth_top_writeResult_U0_sv_1_value_ce0;
assign sv_1_value_ce1 = ap_const_logic_0;
assign sv_1_value_d0 = ap_const_lv64_0;
assign sv_1_value_d1 = ap_const_lv64_0;
assign sv_1_value_we0 = ap_const_logic_0;
assign sv_1_value_we1 = ap_const_logic_0;
assign sv_2_id_address0 = synth_top_writeResult_U0_sv_2_id_address0;
assign sv_2_id_address1 = ap_const_lv10_0;
assign sv_2_id_ce0 = synth_top_writeResult_U0_sv_2_id_ce0;
assign sv_2_id_ce1 = ap_const_logic_0;
assign sv_2_id_d0 = ap_const_lv32_0;
assign sv_2_id_d1 = ap_const_lv32_0;
assign sv_2_id_we0 = ap_const_logic_0;
assign sv_2_id_we1 = ap_const_logic_0;
assign sv_2_value_address0 = synth_top_writeResult_U0_sv_2_value_address0;
assign sv_2_value_address1 = ap_const_lv10_0;
assign sv_2_value_ce0 = synth_top_writeResult_U0_sv_2_value_ce0;
assign sv_2_value_ce1 = ap_const_logic_0;
assign sv_2_value_d0 = ap_const_lv64_0;
assign sv_2_value_d1 = ap_const_lv64_0;
assign sv_2_value_we0 = ap_const_logic_0;
assign sv_2_value_we1 = ap_const_logic_0;
assign sv_3_id_address0 = synth_top_writeResult_U0_sv_3_id_address0;
assign sv_3_id_address1 = ap_const_lv10_0;
assign sv_3_id_ce0 = synth_top_writeResult_U0_sv_3_id_ce0;
assign sv_3_id_ce1 = ap_const_logic_0;
assign sv_3_id_d0 = ap_const_lv32_0;
assign sv_3_id_d1 = ap_const_lv32_0;
assign sv_3_id_we0 = ap_const_logic_0;
assign sv_3_id_we1 = ap_const_logic_0;
assign sv_3_value_address0 = synth_top_writeResult_U0_sv_3_value_address0;
assign sv_3_value_address1 = ap_const_lv10_0;
assign sv_3_value_ce0 = synth_top_writeResult_U0_sv_3_value_ce0;
assign sv_3_value_ce1 = ap_const_logic_0;
assign sv_3_value_d0 = ap_const_lv64_0;
assign sv_3_value_d1 = ap_const_lv64_0;
assign sv_3_value_we0 = ap_const_logic_0;
assign sv_3_value_we1 = ap_const_logic_0;
assign synth_top_writeResult_U0_ap_continue = ap_const_logic_1;
assign synth_top_writeResult_U0_ap_start = ap_start;
assign synth_top_writeResult_U0_example_0_id_q0 = example_0_id_q0;
assign synth_top_writeResult_U0_example_0_value_q0 = example_0_value_q0;
assign synth_top_writeResult_U0_example_1_id_q0 = example_1_id_q0;
assign synth_top_writeResult_U0_example_1_value_q0 = example_1_value_q0;
assign synth_top_writeResult_U0_example_2_id_q0 = example_2_id_q0;
assign synth_top_writeResult_U0_example_2_value_q0 = example_2_value_q0;
assign synth_top_writeResult_U0_example_3_id_q0 = example_3_id_q0;
assign synth_top_writeResult_U0_example_3_value_q0 = example_3_value_q0;
assign synth_top_writeResult_U0_kernelType = kernelType;
assign synth_top_writeResult_U0_lambda_q0 = lambda_q0;
assign synth_top_writeResult_U0_nonZeroFeature_q0 = nonZeroFeature_q0;
assign synth_top_writeResult_U0_output_r_q0 = output_r_q0;
assign synth_top_writeResult_U0_svNonZeroFeature_q0 = svNonZeroFeature_q0;
assign synth_top_writeResult_U0_sv_0_id_q0 = sv_0_id_q0;
assign synth_top_writeResult_U0_sv_0_value_q0 = sv_0_value_q0;
assign synth_top_writeResult_U0_sv_1_id_q0 = sv_1_id_q0;
assign synth_top_writeResult_U0_sv_1_value_q0 = sv_1_value_q0;
assign synth_top_writeResult_U0_sv_2_id_q0 = sv_2_id_q0;
assign synth_top_writeResult_U0_sv_2_value_q0 = sv_2_value_q0;
assign synth_top_writeResult_U0_sv_3_id_q0 = sv_3_id_q0;
assign synth_top_writeResult_U0_sv_3_value_q0 = sv_3_value_q0;
assign synth_top_writeResult_U0_weight_q0 = weight_q0;
assign weight_address0 = synth_top_writeResult_U0_weight_address0;
assign weight_address1 = ap_const_lv6_0;
assign weight_ce0 = synth_top_writeResult_U0_weight_ce0;
assign weight_ce1 = ap_const_logic_0;
assign weight_d0 = ap_const_lv64_0;
assign weight_d1 = ap_const_lv64_0;
assign weight_we0 = ap_const_logic_0;
assign weight_we1 = ap_const_logic_0;


endmodule //synth_top

